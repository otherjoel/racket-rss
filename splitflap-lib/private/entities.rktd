#hash(("aacute" . #hasheq((characters . "Á") (codepoints . (193)))) ("abreve" . #hasheq((characters . "ă") (codepoints . (259)))) ("ac" . #hasheq((characters . "∾") (codepoints . (8766)))) ("acd" . #hasheq((characters . "∿") (codepoints . (8767)))) ("ace" . #hasheq((characters . "∾̳") (codepoints . (8766 819)))) ("acirc" . #hasheq((characters . "Â") (codepoints . (194)))) ("acute" . #hasheq((characters . "´") (codepoints . (180)))) ("acy" . #hasheq((characters . "а") (codepoints . (1072)))) ("aelig" . #hasheq((characters . "æ") (codepoints . (230)))) ("af" . #hasheq((characters . "\u2061") (codepoints . (8289)))) ("afr" . #hasheq((characters . "𝔄") (codepoints . (120068)))) ("agrave" . #hasheq((characters . "À") (codepoints . (192)))) ("alefsym" . #hasheq((characters . "ℵ") (codepoints . (8501)))) ("aleph" . #hasheq((characters . "ℵ") (codepoints . (8501)))) ("alpha" . #hasheq((characters . "α") (codepoints . (945)))) ("amacr" . #hasheq((characters . "ā") (codepoints . (257)))) ("amalg" . #hasheq((characters . "⨿") (codepoints . (10815)))) ("amp" . #hasheq((characters . "&") (codepoints . (38)))) ("and" . #hasheq((characters . "⩓") (codepoints . (10835)))) ("andand" . #hasheq((characters . "⩕") (codepoints . (10837)))) ("andd" . #hasheq((characters . "⩜") (codepoints . (10844)))) ("andslope" . #hasheq((characters . "⩘") (codepoints . (10840)))) ("andv" . #hasheq((characters . "⩚") (codepoints . (10842)))) ("ang" . #hasheq((characters . "∠") (codepoints . (8736)))) ("ange" . #hasheq((characters . "⦤") (codepoints . (10660)))) ("angle" . #hasheq((characters . "∠") (codepoints . (8736)))) ("angmsd" . #hasheq((characters . "∡") (codepoints . (8737)))) ("angmsdaa" . #hasheq((characters . "⦨") (codepoints . (10664)))) ("angmsdab" . #hasheq((characters . "⦩") (codepoints . (10665)))) ("angmsdac" . #hasheq((characters . "⦪") (codepoints . (10666)))) ("angmsdad" . #hasheq((characters . "⦫") (codepoints . (10667)))) ("angmsdae" . #hasheq((characters . "⦬") (codepoints . (10668)))) ("angmsdaf" . #hasheq((characters . "⦭") (codepoints . (10669)))) ("angmsdag" . #hasheq((characters . "⦮") (codepoints . (10670)))) ("angmsdah" . #hasheq((characters . "⦯") (codepoints . (10671)))) ("angrt" . #hasheq((characters . "∟") (codepoints . (8735)))) ("angrtvb" . #hasheq((characters . "⊾") (codepoints . (8894)))) ("angrtvbd" . #hasheq((characters . "⦝") (codepoints . (10653)))) ("angsph" . #hasheq((characters . "∢") (codepoints . (8738)))) ("angst" . #hasheq((characters . "Å") (codepoints . (197)))) ("angzarr" . #hasheq((characters . "⍼") (codepoints . (9084)))) ("aogon" . #hasheq((characters . "ą") (codepoints . (261)))) ("aopf" . #hasheq((characters . "𝕒") (codepoints . (120146)))) ("ap" . #hasheq((characters . "≈") (codepoints . (8776)))) ("apacir" . #hasheq((characters . "⩯") (codepoints . (10863)))) ("ape" . #hasheq((characters . "≊") (codepoints . (8778)))) ("apid" . #hasheq((characters . "≋") (codepoints . (8779)))) ("apos" . #hasheq((characters . "'") (codepoints . (39)))) ("applyfunction" . #hasheq((characters . "\u2061") (codepoints . (8289)))) ("approx" . #hasheq((characters . "≈") (codepoints . (8776)))) ("approxeq" . #hasheq((characters . "≊") (codepoints . (8778)))) ("aring" . #hasheq((characters . "Å") (codepoints . (197)))) ("ascr" . #hasheq((characters . "𝒶") (codepoints . (119990)))) ("assign" . #hasheq((characters . "≔") (codepoints . (8788)))) ("ast" . #hasheq((characters . "*") (codepoints . (42)))) ("asymp" . #hasheq((characters . "≈") (codepoints . (8776)))) ("asympeq" . #hasheq((characters . "≍") (codepoints . (8781)))) ("atilde" . #hasheq((characters . "ã") (codepoints . (227)))) ("auml" . #hasheq((characters . "Ä") (codepoints . (196)))) ("awconint" . #hasheq((characters . "∳") (codepoints . (8755)))) ("awint" . #hasheq((characters . "⨑") (codepoints . (10769)))) ("backcong" . #hasheq((characters . "≌") (codepoints . (8780)))) ("backepsilon" . #hasheq((characters . "϶") (codepoints . (1014)))) ("backprime" . #hasheq((characters . "‵") (codepoints . (8245)))) ("backsim" . #hasheq((characters . "∽") (codepoints . (8765)))) ("backsimeq" . #hasheq((characters . "⋍") (codepoints . (8909)))) ("backslash" . #hasheq((characters . "∖") (codepoints . (8726)))) ("barv" . #hasheq((characters . "⫧") (codepoints . (10983)))) ("barvee" . #hasheq((characters . "⊽") (codepoints . (8893)))) ("barwed" . #hasheq((characters . "⌆") (codepoints . (8966)))) ("barwedge" . #hasheq((characters . "⌅") (codepoints . (8965)))) ("bbrk" . #hasheq((characters . "⎵") (codepoints . (9141)))) ("bbrktbrk" . #hasheq((characters . "⎶") (codepoints . (9142)))) ("bcong" . #hasheq((characters . "≌") (codepoints . (8780)))) ("bcy" . #hasheq((characters . "Б") (codepoints . (1041)))) ("bdquo" . #hasheq((characters . "„") (codepoints . (8222)))) ("becaus" . #hasheq((characters . "∵") (codepoints . (8757)))) ("because" . #hasheq((characters . "∵") (codepoints . (8757)))) ("bemptyv" . #hasheq((characters . "⦰") (codepoints . (10672)))) ("bepsi" . #hasheq((characters . "϶") (codepoints . (1014)))) ("bernou" . #hasheq((characters . "ℬ") (codepoints . (8492)))) ("bernoullis" . #hasheq((characters . "ℬ") (codepoints . (8492)))) ("beta" . #hasheq((characters . "Β") (codepoints . (914)))) ("beth" . #hasheq((characters . "ℶ") (codepoints . (8502)))) ("between" . #hasheq((characters . "≬") (codepoints . (8812)))) ("bfr" . #hasheq((characters . "𝔟") (codepoints . (120095)))) ("bigcap" . #hasheq((characters . "⋂") (codepoints . (8898)))) ("bigcirc" . #hasheq((characters . "◯") (codepoints . (9711)))) ("bigcup" . #hasheq((characters . "⋃") (codepoints . (8899)))) ("bigodot" . #hasheq((characters . "⨀") (codepoints . (10752)))) ("bigoplus" . #hasheq((characters . "⨁") (codepoints . (10753)))) ("bigotimes" . #hasheq((characters . "⨂") (codepoints . (10754)))) ("bigsqcup" . #hasheq((characters . "⨆") (codepoints . (10758)))) ("bigstar" . #hasheq((characters . "★") (codepoints . (9733)))) ("bigtriangledown" . #hasheq((characters . "▽") (codepoints . (9661)))) ("bigtriangleup" . #hasheq((characters . "△") (codepoints . (9651)))) ("biguplus" . #hasheq((characters . "⨄") (codepoints . (10756)))) ("bigvee" . #hasheq((characters . "⋁") (codepoints . (8897)))) ("bigwedge" . #hasheq((characters . "⋀") (codepoints . (8896)))) ("bkarow" . #hasheq((characters . "⤍") (codepoints . (10509)))) ("blacklozenge" . #hasheq((characters . "⧫") (codepoints . (10731)))) ("blacksquare" . #hasheq((characters . "▪") (codepoints . (9642)))) ("blacktriangle" . #hasheq((characters . "▴") (codepoints . (9652)))) ("blacktriangledown" . #hasheq((characters . "▾") (codepoints . (9662)))) ("blacktriangleleft" . #hasheq((characters . "◂") (codepoints . (9666)))) ("blacktriangleright" . #hasheq((characters . "▸") (codepoints . (9656)))) ("blank" . #hasheq((characters . "␣") (codepoints . (9251)))) ("blk12" . #hasheq((characters . "▒") (codepoints . (9618)))) ("blk14" . #hasheq((characters . "░") (codepoints . (9617)))) ("blk34" . #hasheq((characters . "▓") (codepoints . (9619)))) ("block" . #hasheq((characters . "█") (codepoints . (9608)))) ("bne" . #hasheq((characters . "=⃥") (codepoints . (61 8421)))) ("bnequiv" . #hasheq((characters . "≡⃥") (codepoints . (8801 8421)))) ("bnot" . #hasheq((characters . "⫭") (codepoints . (10989)))) ("bopf" . #hasheq((characters . "𝔹") (codepoints . (120121)))) ("bot" . #hasheq((characters . "⊥") (codepoints . (8869)))) ("bottom" . #hasheq((characters . "⊥") (codepoints . (8869)))) ("bowtie" . #hasheq((characters . "⋈") (codepoints . (8904)))) ("boxbox" . #hasheq((characters . "⧉") (codepoints . (10697)))) ("boxdl" . #hasheq((characters . "╖") (codepoints . (9558)))) ("boxdr" . #hasheq((characters . "╔") (codepoints . (9556)))) ("boxh" . #hasheq((characters . "═") (codepoints . (9552)))) ("boxhd" . #hasheq((characters . "╤") (codepoints . (9572)))) ("boxhu" . #hasheq((characters . "╩") (codepoints . (9577)))) ("boxminus" . #hasheq((characters . "⊟") (codepoints . (8863)))) ("boxplus" . #hasheq((characters . "⊞") (codepoints . (8862)))) ("boxtimes" . #hasheq((characters . "⊠") (codepoints . (8864)))) ("boxul" . #hasheq((characters . "╝") (codepoints . (9565)))) ("boxur" . #hasheq((characters . "╙") (codepoints . (9561)))) ("boxv" . #hasheq((characters . "│") (codepoints . (9474)))) ("boxvh" . #hasheq((characters . "╪") (codepoints . (9578)))) ("boxvl" . #hasheq((characters . "╢") (codepoints . (9570)))) ("boxvr" . #hasheq((characters . "╠") (codepoints . (9568)))) ("bprime" . #hasheq((characters . "‵") (codepoints . (8245)))) ("breve" . #hasheq((characters . "˘") (codepoints . (728)))) ("brvbar" . #hasheq((characters . "¦") (codepoints . (166)))) ("bscr" . #hasheq((characters . "𝒷") (codepoints . (119991)))) ("bsemi" . #hasheq((characters . "⁏") (codepoints . (8271)))) ("bsim" . #hasheq((characters . "∽") (codepoints . (8765)))) ("bsime" . #hasheq((characters . "⋍") (codepoints . (8909)))) ("bsol" . #hasheq((characters . "\\") (codepoints . (92)))) ("bsolb" . #hasheq((characters . "⧅") (codepoints . (10693)))) ("bsolhsub" . #hasheq((characters . "⟈") (codepoints . (10184)))) ("bull" . #hasheq((characters . "•") (codepoints . (8226)))) ("bullet" . #hasheq((characters . "•") (codepoints . (8226)))) ("bump" . #hasheq((characters . "≎") (codepoints . (8782)))) ("bumpe" . #hasheq((characters . "⪮") (codepoints . (10926)))) ("bumpeq" . #hasheq((characters . "≎") (codepoints . (8782)))) ("cacute" . #hasheq((characters . "Ć") (codepoints . (262)))) ("cap" . #hasheq((characters . "⋒") (codepoints . (8914)))) ("capand" . #hasheq((characters . "⩄") (codepoints . (10820)))) ("capbrcup" . #hasheq((characters . "⩉") (codepoints . (10825)))) ("capcap" . #hasheq((characters . "⩋") (codepoints . (10827)))) ("capcup" . #hasheq((characters . "⩇") (codepoints . (10823)))) ("capdot" . #hasheq((characters . "⩀") (codepoints . (10816)))) ("capitaldifferentiald" . #hasheq((characters . "ⅅ") (codepoints . (8517)))) ("caps" . #hasheq((characters . "∩︀") (codepoints . (8745 65024)))) ("caret" . #hasheq((characters . "⁁") (codepoints . (8257)))) ("caron" . #hasheq((characters . "ˇ") (codepoints . (711)))) ("cayleys" . #hasheq((characters . "ℭ") (codepoints . (8493)))) ("ccaps" . #hasheq((characters . "⩍") (codepoints . (10829)))) ("ccaron" . #hasheq((characters . "č") (codepoints . (269)))) ("ccedil" . #hasheq((characters . "Ç") (codepoints . (199)))) ("ccirc" . #hasheq((characters . "ĉ") (codepoints . (265)))) ("cconint" . #hasheq((characters . "∰") (codepoints . (8752)))) ("ccups" . #hasheq((characters . "⩌") (codepoints . (10828)))) ("ccupssm" . #hasheq((characters . "⩐") (codepoints . (10832)))) ("cdot" . #hasheq((characters . "Ċ") (codepoints . (266)))) ("cedil" . #hasheq((characters . "¸") (codepoints . (184)))) ("cedilla" . #hasheq((characters . "¸") (codepoints . (184)))) ("cemptyv" . #hasheq((characters . "⦲") (codepoints . (10674)))) ("cent" . #hasheq((characters . "¢") (codepoints . (162)))) ("centerdot" . #hasheq((characters . "·") (codepoints . (183)))) ("cfr" . #hasheq((characters . "𝔠") (codepoints . (120096)))) ("chcy" . #hasheq((characters . "ч") (codepoints . (1095)))) ("check" . #hasheq((characters . "✓") (codepoints . (10003)))) ("checkmark" . #hasheq((characters . "✓") (codepoints . (10003)))) ("chi" . #hasheq((characters . "χ") (codepoints . (967)))) ("cir" . #hasheq((characters . "○") (codepoints . (9675)))) ("circ" . #hasheq((characters . "ˆ") (codepoints . (710)))) ("circeq" . #hasheq((characters . "≗") (codepoints . (8791)))) ("circlearrowleft" . #hasheq((characters . "↺") (codepoints . (8634)))) ("circlearrowright" . #hasheq((characters . "↻") (codepoints . (8635)))) ("circledast" . #hasheq((characters . "⊛") (codepoints . (8859)))) ("circledcirc" . #hasheq((characters . "⊚") (codepoints . (8858)))) ("circleddash" . #hasheq((characters . "⊝") (codepoints . (8861)))) ("circledot" . #hasheq((characters . "⊙") (codepoints . (8857)))) ("circledr" . #hasheq((characters . "®") (codepoints . (174)))) ("circleds" . #hasheq((characters . "Ⓢ") (codepoints . (9416)))) ("circleminus" . #hasheq((characters . "⊖") (codepoints . (8854)))) ("circleplus" . #hasheq((characters . "⊕") (codepoints . (8853)))) ("circletimes" . #hasheq((characters . "⊗") (codepoints . (8855)))) ("cire" . #hasheq((characters . "⧃") (codepoints . (10691)))) ("cirfnint" . #hasheq((characters . "⨐") (codepoints . (10768)))) ("cirmid" . #hasheq((characters . "⫯") (codepoints . (10991)))) ("cirscir" . #hasheq((characters . "⧂") (codepoints . (10690)))) ("clockwisecontourintegral" . #hasheq((characters . "∲") (codepoints . (8754)))) ("closecurlydoublequote" . #hasheq((characters . "”") (codepoints . (8221)))) ("closecurlyquote" . #hasheq((characters . "’") (codepoints . (8217)))) ("clubs" . #hasheq((characters . "♣") (codepoints . (9827)))) ("clubsuit" . #hasheq((characters . "♣") (codepoints . (9827)))) ("colon" . #hasheq((characters . "∷") (codepoints . (8759)))) ("colone" . #hasheq((characters . "≔") (codepoints . (8788)))) ("coloneq" . #hasheq((characters . "≔") (codepoints . (8788)))) ("comma" . #hasheq((characters . ",") (codepoints . (44)))) ("commat" . #hasheq((characters . "@") (codepoints . (64)))) ("comp" . #hasheq((characters . "∁") (codepoints . (8705)))) ("compfn" . #hasheq((characters . "∘") (codepoints . (8728)))) ("complement" . #hasheq((characters . "∁") (codepoints . (8705)))) ("complexes" . #hasheq((characters . "ℂ") (codepoints . (8450)))) ("cong" . #hasheq((characters . "≅") (codepoints . (8773)))) ("congdot" . #hasheq((characters . "⩭") (codepoints . (10861)))) ("congruent" . #hasheq((characters . "≡") (codepoints . (8801)))) ("conint" . #hasheq((characters . "∯") (codepoints . (8751)))) ("contourintegral" . #hasheq((characters . "∮") (codepoints . (8750)))) ("copf" . #hasheq((characters . "𝕔") (codepoints . (120148)))) ("coprod" . #hasheq((characters . "∐") (codepoints . (8720)))) ("coproduct" . #hasheq((characters . "∐") (codepoints . (8720)))) ("copy" . #hasheq((characters . "©") (codepoints . (169)))) ("copysr" . #hasheq((characters . "℗") (codepoints . (8471)))) ("counterclockwisecontourintegral" . #hasheq((characters . "∳") (codepoints . (8755)))) ("crarr" . #hasheq((characters . "↵") (codepoints . (8629)))) ("cross" . #hasheq((characters . "⨯") (codepoints . (10799)))) ("cscr" . #hasheq((characters . "𝒸") (codepoints . (119992)))) ("csub" . #hasheq((characters . "⫏") (codepoints . (10959)))) ("csube" . #hasheq((characters . "⫑") (codepoints . (10961)))) ("csup" . #hasheq((characters . "⫐") (codepoints . (10960)))) ("csupe" . #hasheq((characters . "⫒") (codepoints . (10962)))) ("ctdot" . #hasheq((characters . "⋯") (codepoints . (8943)))) ("cudarrl" . #hasheq((characters . "⤸") (codepoints . (10552)))) ("cudarrr" . #hasheq((characters . "⤵") (codepoints . (10549)))) ("cuepr" . #hasheq((characters . "⋞") (codepoints . (8926)))) ("cuesc" . #hasheq((characters . "⋟") (codepoints . (8927)))) ("cularr" . #hasheq((characters . "↶") (codepoints . (8630)))) ("cularrp" . #hasheq((characters . "⤽") (codepoints . (10557)))) ("cup" . #hasheq((characters . "⋓") (codepoints . (8915)))) ("cupbrcap" . #hasheq((characters . "⩈") (codepoints . (10824)))) ("cupcap" . #hasheq((characters . "≍") (codepoints . (8781)))) ("cupcup" . #hasheq((characters . "⩊") (codepoints . (10826)))) ("cupdot" . #hasheq((characters . "⊍") (codepoints . (8845)))) ("cupor" . #hasheq((characters . "⩅") (codepoints . (10821)))) ("cups" . #hasheq((characters . "∪︀") (codepoints . (8746 65024)))) ("curarr" . #hasheq((characters . "↷") (codepoints . (8631)))) ("curarrm" . #hasheq((characters . "⤼") (codepoints . (10556)))) ("curlyeqprec" . #hasheq((characters . "⋞") (codepoints . (8926)))) ("curlyeqsucc" . #hasheq((characters . "⋟") (codepoints . (8927)))) ("curlyvee" . #hasheq((characters . "⋎") (codepoints . (8910)))) ("curlywedge" . #hasheq((characters . "⋏") (codepoints . (8911)))) ("curren" . #hasheq((characters . "¤") (codepoints . (164)))) ("curvearrowleft" . #hasheq((characters . "↶") (codepoints . (8630)))) ("curvearrowright" . #hasheq((characters . "↷") (codepoints . (8631)))) ("cuvee" . #hasheq((characters . "⋎") (codepoints . (8910)))) ("cuwed" . #hasheq((characters . "⋏") (codepoints . (8911)))) ("cwconint" . #hasheq((characters . "∲") (codepoints . (8754)))) ("cwint" . #hasheq((characters . "∱") (codepoints . (8753)))) ("cylcty" . #hasheq((characters . "⌭") (codepoints . (9005)))) ("dagger" . #hasheq((characters . "†") (codepoints . (8224)))) ("daleth" . #hasheq((characters . "ℸ") (codepoints . (8504)))) ("darr" . #hasheq((characters . "↡") (codepoints . (8609)))) ("dash" . #hasheq((characters . "‐") (codepoints . (8208)))) ("dashv" . #hasheq((characters . "⫤") (codepoints . (10980)))) ("dbkarow" . #hasheq((characters . "⤏") (codepoints . (10511)))) ("dblac" . #hasheq((characters . "˝") (codepoints . (733)))) ("dcaron" . #hasheq((characters . "ď") (codepoints . (271)))) ("dcy" . #hasheq((characters . "Д") (codepoints . (1044)))) ("dd" . #hasheq((characters . "ⅆ") (codepoints . (8518)))) ("ddagger" . #hasheq((characters . "‡") (codepoints . (8225)))) ("ddarr" . #hasheq((characters . "⇊") (codepoints . (8650)))) ("ddotrahd" . #hasheq((characters . "⤑") (codepoints . (10513)))) ("ddotseq" . #hasheq((characters . "⩷") (codepoints . (10871)))) ("deg" . #hasheq((characters . "°") (codepoints . (176)))) ("del" . #hasheq((characters . "∇") (codepoints . (8711)))) ("delta" . #hasheq((characters . "δ") (codepoints . (948)))) ("demptyv" . #hasheq((characters . "⦱") (codepoints . (10673)))) ("dfisht" . #hasheq((characters . "⥿") (codepoints . (10623)))) ("dfr" . #hasheq((characters . "𝔡") (codepoints . (120097)))) ("dhar" . #hasheq((characters . "⥥") (codepoints . (10597)))) ("dharl" . #hasheq((characters . "⇃") (codepoints . (8643)))) ("dharr" . #hasheq((characters . "⇂") (codepoints . (8642)))) ("diacriticalacute" . #hasheq((characters . "´") (codepoints . (180)))) ("diacriticaldot" . #hasheq((characters . "˙") (codepoints . (729)))) ("diacriticaldoubleacute" . #hasheq((characters . "˝") (codepoints . (733)))) ("diacriticalgrave" . #hasheq((characters . "`") (codepoints . (96)))) ("diacriticaltilde" . #hasheq((characters . "˜") (codepoints . (732)))) ("diam" . #hasheq((characters . "⋄") (codepoints . (8900)))) ("diamond" . #hasheq((characters . "⋄") (codepoints . (8900)))) ("diamondsuit" . #hasheq((characters . "♦") (codepoints . (9830)))) ("diams" . #hasheq((characters . "♦") (codepoints . (9830)))) ("die" . #hasheq((characters . "¨") (codepoints . (168)))) ("differentiald" . #hasheq((characters . "ⅆ") (codepoints . (8518)))) ("digamma" . #hasheq((characters . "ϝ") (codepoints . (989)))) ("disin" . #hasheq((characters . "⋲") (codepoints . (8946)))) ("div" . #hasheq((characters . "÷") (codepoints . (247)))) ("divide" . #hasheq((characters . "÷") (codepoints . (247)))) ("divideontimes" . #hasheq((characters . "⋇") (codepoints . (8903)))) ("divonx" . #hasheq((characters . "⋇") (codepoints . (8903)))) ("djcy" . #hasheq((characters . "Ђ") (codepoints . (1026)))) ("dlcorn" . #hasheq((characters . "⌞") (codepoints . (8990)))) ("dlcrop" . #hasheq((characters . "⌍") (codepoints . (8973)))) ("dollar" . #hasheq((characters . "$") (codepoints . (36)))) ("dopf" . #hasheq((characters . "𝔻") (codepoints . (120123)))) ("dot" . #hasheq((characters . "¨") (codepoints . (168)))) ("dotdot" . #hasheq((characters . "⃜") (codepoints . (8412)))) ("doteq" . #hasheq((characters . "≐") (codepoints . (8784)))) ("doteqdot" . #hasheq((characters . "≑") (codepoints . (8785)))) ("dotequal" . #hasheq((characters . "≐") (codepoints . (8784)))) ("dotminus" . #hasheq((characters . "∸") (codepoints . (8760)))) ("dotplus" . #hasheq((characters . "∔") (codepoints . (8724)))) ("dotsquare" . #hasheq((characters . "⊡") (codepoints . (8865)))) ("doublebarwedge" . #hasheq((characters . "⌆") (codepoints . (8966)))) ("doublecontourintegral" . #hasheq((characters . "∯") (codepoints . (8751)))) ("doubledot" . #hasheq((characters . "¨") (codepoints . (168)))) ("doubledownarrow" . #hasheq((characters . "⇓") (codepoints . (8659)))) ("doubleleftarrow" . #hasheq((characters . "⇐") (codepoints . (8656)))) ("doubleleftrightarrow" . #hasheq((characters . "⇔") (codepoints . (8660)))) ("doublelefttee" . #hasheq((characters . "⫤") (codepoints . (10980)))) ("doublelongleftarrow" . #hasheq((characters . "⟸") (codepoints . (10232)))) ("doublelongleftrightarrow" . #hasheq((characters . "⟺") (codepoints . (10234)))) ("doublelongrightarrow" . #hasheq((characters . "⟹") (codepoints . (10233)))) ("doublerightarrow" . #hasheq((characters . "⇒") (codepoints . (8658)))) ("doublerighttee" . #hasheq((characters . "⊨") (codepoints . (8872)))) ("doubleuparrow" . #hasheq((characters . "⇑") (codepoints . (8657)))) ("doubleupdownarrow" . #hasheq((characters . "⇕") (codepoints . (8661)))) ("doubleverticalbar" . #hasheq((characters . "∥") (codepoints . (8741)))) ("downarrow" . #hasheq((characters . "↓") (codepoints . (8595)))) ("downarrowbar" . #hasheq((characters . "⤓") (codepoints . (10515)))) ("downarrowuparrow" . #hasheq((characters . "⇵") (codepoints . (8693)))) ("downbreve" . #hasheq((characters . "̑") (codepoints . (785)))) ("downdownarrows" . #hasheq((characters . "⇊") (codepoints . (8650)))) ("downharpoonleft" . #hasheq((characters . "⇃") (codepoints . (8643)))) ("downharpoonright" . #hasheq((characters . "⇂") (codepoints . (8642)))) ("downleftrightvector" . #hasheq((characters . "⥐") (codepoints . (10576)))) ("downleftteevector" . #hasheq((characters . "⥞") (codepoints . (10590)))) ("downleftvector" . #hasheq((characters . "↽") (codepoints . (8637)))) ("downleftvectorbar" . #hasheq((characters . "⥖") (codepoints . (10582)))) ("downrightteevector" . #hasheq((characters . "⥟") (codepoints . (10591)))) ("downrightvector" . #hasheq((characters . "⇁") (codepoints . (8641)))) ("downrightvectorbar" . #hasheq((characters . "⥗") (codepoints . (10583)))) ("downtee" . #hasheq((characters . "⊤") (codepoints . (8868)))) ("downteearrow" . #hasheq((characters . "↧") (codepoints . (8615)))) ("drbkarow" . #hasheq((characters . "⤐") (codepoints . (10512)))) ("drcorn" . #hasheq((characters . "⌟") (codepoints . (8991)))) ("drcrop" . #hasheq((characters . "⌌") (codepoints . (8972)))) ("dscr" . #hasheq((characters . "𝒟") (codepoints . (119967)))) ("dscy" . #hasheq((characters . "Ѕ") (codepoints . (1029)))) ("dsol" . #hasheq((characters . "⧶") (codepoints . (10742)))) ("dstrok" . #hasheq((characters . "Đ") (codepoints . (272)))) ("dtdot" . #hasheq((characters . "⋱") (codepoints . (8945)))) ("dtri" . #hasheq((characters . "▿") (codepoints . (9663)))) ("dtrif" . #hasheq((characters . "▾") (codepoints . (9662)))) ("duarr" . #hasheq((characters . "⇵") (codepoints . (8693)))) ("duhar" . #hasheq((characters . "⥯") (codepoints . (10607)))) ("dwangle" . #hasheq((characters . "⦦") (codepoints . (10662)))) ("dzcy" . #hasheq((characters . "џ") (codepoints . (1119)))) ("dzigrarr" . #hasheq((characters . "⟿") (codepoints . (10239)))) ("eacute" . #hasheq((characters . "é") (codepoints . (233)))) ("easter" . #hasheq((characters . "⩮") (codepoints . (10862)))) ("ecaron" . #hasheq((characters . "ě") (codepoints . (283)))) ("ecir" . #hasheq((characters . "≖") (codepoints . (8790)))) ("ecirc" . #hasheq((characters . "ê") (codepoints . (234)))) ("ecolon" . #hasheq((characters . "≕") (codepoints . (8789)))) ("ecy" . #hasheq((characters . "Э") (codepoints . (1069)))) ("eddot" . #hasheq((characters . "⩷") (codepoints . (10871)))) ("edot" . #hasheq((characters . "≑") (codepoints . (8785)))) ("ee" . #hasheq((characters . "ⅇ") (codepoints . (8519)))) ("efdot" . #hasheq((characters . "≒") (codepoints . (8786)))) ("efr" . #hasheq((characters . "𝔢") (codepoints . (120098)))) ("eg" . #hasheq((characters . "⪚") (codepoints . (10906)))) ("egrave" . #hasheq((characters . "È") (codepoints . (200)))) ("egs" . #hasheq((characters . "⪖") (codepoints . (10902)))) ("egsdot" . #hasheq((characters . "⪘") (codepoints . (10904)))) ("el" . #hasheq((characters . "⪙") (codepoints . (10905)))) ("element" . #hasheq((characters . "∈") (codepoints . (8712)))) ("elinters" . #hasheq((characters . "⏧") (codepoints . (9191)))) ("ell" . #hasheq((characters . "ℓ") (codepoints . (8467)))) ("els" . #hasheq((characters . "⪕") (codepoints . (10901)))) ("elsdot" . #hasheq((characters . "⪗") (codepoints . (10903)))) ("emacr" . #hasheq((characters . "ē") (codepoints . (275)))) ("empty" . #hasheq((characters . "∅") (codepoints . (8709)))) ("emptyset" . #hasheq((characters . "∅") (codepoints . (8709)))) ("emptysmallsquare" . #hasheq((characters . "◻") (codepoints . (9723)))) ("emptyv" . #hasheq((characters . "∅") (codepoints . (8709)))) ("emptyverysmallsquare" . #hasheq((characters . "▫") (codepoints . (9643)))) ("emsp" . #hasheq((characters . " ") (codepoints . (8195)))) ("emsp13" . #hasheq((characters . " ") (codepoints . (8196)))) ("emsp14" . #hasheq((characters . " ") (codepoints . (8197)))) ("eng" . #hasheq((characters . "ŋ") (codepoints . (331)))) ("ensp" . #hasheq((characters . " ") (codepoints . (8194)))) ("eogon" . #hasheq((characters . "ę") (codepoints . (281)))) ("eopf" . #hasheq((characters . "𝔼") (codepoints . (120124)))) ("epar" . #hasheq((characters . "⋕") (codepoints . (8917)))) ("eparsl" . #hasheq((characters . "⧣") (codepoints . (10723)))) ("eplus" . #hasheq((characters . "⩱") (codepoints . (10865)))) ("epsi" . #hasheq((characters . "ε") (codepoints . (949)))) ("epsilon" . #hasheq((characters . "Ε") (codepoints . (917)))) ("epsiv" . #hasheq((characters . "ϵ") (codepoints . (1013)))) ("eqcirc" . #hasheq((characters . "≖") (codepoints . (8790)))) ("eqcolon" . #hasheq((characters . "≕") (codepoints . (8789)))) ("eqsim" . #hasheq((characters . "≂") (codepoints . (8770)))) ("eqslantgtr" . #hasheq((characters . "⪖") (codepoints . (10902)))) ("eqslantless" . #hasheq((characters . "⪕") (codepoints . (10901)))) ("equal" . #hasheq((characters . "⩵") (codepoints . (10869)))) ("equals" . #hasheq((characters . "=") (codepoints . (61)))) ("equaltilde" . #hasheq((characters . "≂") (codepoints . (8770)))) ("equest" . #hasheq((characters . "≟") (codepoints . (8799)))) ("equilibrium" . #hasheq((characters . "⇌") (codepoints . (8652)))) ("equiv" . #hasheq((characters . "≡") (codepoints . (8801)))) ("equivdd" . #hasheq((characters . "⩸") (codepoints . (10872)))) ("eqvparsl" . #hasheq((characters . "⧥") (codepoints . (10725)))) ("erarr" . #hasheq((characters . "⥱") (codepoints . (10609)))) ("erdot" . #hasheq((characters . "≓") (codepoints . (8787)))) ("escr" . #hasheq((characters . "ℰ") (codepoints . (8496)))) ("esdot" . #hasheq((characters . "≐") (codepoints . (8784)))) ("esim" . #hasheq((characters . "≂") (codepoints . (8770)))) ("eta" . #hasheq((characters . "Η") (codepoints . (919)))) ("eth" . #hasheq((characters . "ð") (codepoints . (240)))) ("euml" . #hasheq((characters . "Ë") (codepoints . (203)))) ("euro" . #hasheq((characters . "€") (codepoints . (8364)))) ("excl" . #hasheq((characters . "!") (codepoints . (33)))) ("exist" . #hasheq((characters . "∃") (codepoints . (8707)))) ("exists" . #hasheq((characters . "∃") (codepoints . (8707)))) ("expectation" . #hasheq((characters . "ℰ") (codepoints . (8496)))) ("exponentiale" . #hasheq((characters . "ⅇ") (codepoints . (8519)))) ("fallingdotseq" . #hasheq((characters . "≒") (codepoints . (8786)))) ("fcy" . #hasheq((characters . "Ф") (codepoints . (1060)))) ("female" . #hasheq((characters . "♀") (codepoints . (9792)))) ("ffilig" . #hasheq((characters . "ﬃ") (codepoints . (64259)))) ("fflig" . #hasheq((characters . "ﬀ") (codepoints . (64256)))) ("ffllig" . #hasheq((characters . "ﬄ") (codepoints . (64260)))) ("ffr" . #hasheq((characters . "𝔣") (codepoints . (120099)))) ("filig" . #hasheq((characters . "ﬁ") (codepoints . (64257)))) ("filledsmallsquare" . #hasheq((characters . "◼") (codepoints . (9724)))) ("filledverysmallsquare" . #hasheq((characters . "▪") (codepoints . (9642)))) ("fjlig" . #hasheq((characters . "fj") (codepoints . (102 106)))) ("flat" . #hasheq((characters . "♭") (codepoints . (9837)))) ("fllig" . #hasheq((characters . "ﬂ") (codepoints . (64258)))) ("fltns" . #hasheq((characters . "▱") (codepoints . (9649)))) ("fnof" . #hasheq((characters . "ƒ") (codepoints . (402)))) ("fopf" . #hasheq((characters . "𝕗") (codepoints . (120151)))) ("forall" . #hasheq((characters . "∀") (codepoints . (8704)))) ("fork" . #hasheq((characters . "⋔") (codepoints . (8916)))) ("forkv" . #hasheq((characters . "⫙") (codepoints . (10969)))) ("fouriertrf" . #hasheq((characters . "ℱ") (codepoints . (8497)))) ("fpartint" . #hasheq((characters . "⨍") (codepoints . (10765)))) ("frac12" . #hasheq((characters . "½") (codepoints . (189)))) ("frac13" . #hasheq((characters . "⅓") (codepoints . (8531)))) ("frac14" . #hasheq((characters . "¼") (codepoints . (188)))) ("frac15" . #hasheq((characters . "⅕") (codepoints . (8533)))) ("frac16" . #hasheq((characters . "⅙") (codepoints . (8537)))) ("frac18" . #hasheq((characters . "⅛") (codepoints . (8539)))) ("frac23" . #hasheq((characters . "⅔") (codepoints . (8532)))) ("frac25" . #hasheq((characters . "⅖") (codepoints . (8534)))) ("frac34" . #hasheq((characters . "¾") (codepoints . (190)))) ("frac35" . #hasheq((characters . "⅗") (codepoints . (8535)))) ("frac38" . #hasheq((characters . "⅜") (codepoints . (8540)))) ("frac45" . #hasheq((characters . "⅘") (codepoints . (8536)))) ("frac56" . #hasheq((characters . "⅚") (codepoints . (8538)))) ("frac58" . #hasheq((characters . "⅝") (codepoints . (8541)))) ("frac78" . #hasheq((characters . "⅞") (codepoints . (8542)))) ("frasl" . #hasheq((characters . "⁄") (codepoints . (8260)))) ("frown" . #hasheq((characters . "⌢") (codepoints . (8994)))) ("fscr" . #hasheq((characters . "ℱ") (codepoints . (8497)))) ("gacute" . #hasheq((characters . "ǵ") (codepoints . (501)))) ("gamma" . #hasheq((characters . "Γ") (codepoints . (915)))) ("gammad" . #hasheq((characters . "Ϝ") (codepoints . (988)))) ("gap" . #hasheq((characters . "⪆") (codepoints . (10886)))) ("gbreve" . #hasheq((characters . "ğ") (codepoints . (287)))) ("gcedil" . #hasheq((characters . "Ģ") (codepoints . (290)))) ("gcirc" . #hasheq((characters . "Ĝ") (codepoints . (284)))) ("gcy" . #hasheq((characters . "г") (codepoints . (1075)))) ("gdot" . #hasheq((characters . "Ġ") (codepoints . (288)))) ("ge" . #hasheq((characters . "≥") (codepoints . (8805)))) ("gel" . #hasheq((characters . "⋛") (codepoints . (8923)))) ("geq" . #hasheq((characters . "≥") (codepoints . (8805)))) ("geqq" . #hasheq((characters . "≧") (codepoints . (8807)))) ("geqslant" . #hasheq((characters . "⩾") (codepoints . (10878)))) ("ges" . #hasheq((characters . "⩾") (codepoints . (10878)))) ("gescc" . #hasheq((characters . "⪩") (codepoints . (10921)))) ("gesdot" . #hasheq((characters . "⪀") (codepoints . (10880)))) ("gesdoto" . #hasheq((characters . "⪂") (codepoints . (10882)))) ("gesdotol" . #hasheq((characters . "⪄") (codepoints . (10884)))) ("gesl" . #hasheq((characters . "⋛︀") (codepoints . (8923 65024)))) ("gesles" . #hasheq((characters . "⪔") (codepoints . (10900)))) ("gfr" . #hasheq((characters . "𝔊") (codepoints . (120074)))) ("gg" . #hasheq((characters . "≫") (codepoints . (8811)))) ("ggg" . #hasheq((characters . "⋙") (codepoints . (8921)))) ("gimel" . #hasheq((characters . "ℷ") (codepoints . (8503)))) ("gjcy" . #hasheq((characters . "ѓ") (codepoints . (1107)))) ("gl" . #hasheq((characters . "≷") (codepoints . (8823)))) ("gla" . #hasheq((characters . "⪥") (codepoints . (10917)))) ("gle" . #hasheq((characters . "⪒") (codepoints . (10898)))) ("glj" . #hasheq((characters . "⪤") (codepoints . (10916)))) ("gnap" . #hasheq((characters . "⪊") (codepoints . (10890)))) ("gnapprox" . #hasheq((characters . "⪊") (codepoints . (10890)))) ("gne" . #hasheq((characters . "⪈") (codepoints . (10888)))) ("gneq" . #hasheq((characters . "⪈") (codepoints . (10888)))) ("gneqq" . #hasheq((characters . "≩") (codepoints . (8809)))) ("gnsim" . #hasheq((characters . "⋧") (codepoints . (8935)))) ("gopf" . #hasheq((characters . "𝔾") (codepoints . (120126)))) ("grave" . #hasheq((characters . "`") (codepoints . (96)))) ("greaterequal" . #hasheq((characters . "≥") (codepoints . (8805)))) ("greaterequalless" . #hasheq((characters . "⋛") (codepoints . (8923)))) ("greaterfullequal" . #hasheq((characters . "≧") (codepoints . (8807)))) ("greatergreater" . #hasheq((characters . "⪢") (codepoints . (10914)))) ("greaterless" . #hasheq((characters . "≷") (codepoints . (8823)))) ("greaterslantequal" . #hasheq((characters . "⩾") (codepoints . (10878)))) ("greatertilde" . #hasheq((characters . "≳") (codepoints . (8819)))) ("gscr" . #hasheq((characters . "ℊ") (codepoints . (8458)))) ("gsim" . #hasheq((characters . "≳") (codepoints . (8819)))) ("gsime" . #hasheq((characters . "⪎") (codepoints . (10894)))) ("gsiml" . #hasheq((characters . "⪐") (codepoints . (10896)))) ("gt" . #hasheq((characters . ">") (codepoints . (62)))) ("gtcc" . #hasheq((characters . "⪧") (codepoints . (10919)))) ("gtcir" . #hasheq((characters . "⩺") (codepoints . (10874)))) ("gtdot" . #hasheq((characters . "⋗") (codepoints . (8919)))) ("gtlpar" . #hasheq((characters . "⦕") (codepoints . (10645)))) ("gtquest" . #hasheq((characters . "⩼") (codepoints . (10876)))) ("gtrapprox" . #hasheq((characters . "⪆") (codepoints . (10886)))) ("gtrarr" . #hasheq((characters . "⥸") (codepoints . (10616)))) ("gtrdot" . #hasheq((characters . "⋗") (codepoints . (8919)))) ("gtreqless" . #hasheq((characters . "⋛") (codepoints . (8923)))) ("gtreqqless" . #hasheq((characters . "⪌") (codepoints . (10892)))) ("gtrless" . #hasheq((characters . "≷") (codepoints . (8823)))) ("gtrsim" . #hasheq((characters . "≳") (codepoints . (8819)))) ("gvertneqq" . #hasheq((characters . "≩︀") (codepoints . (8809 65024)))) ("gvne" . #hasheq((characters . "≩︀") (codepoints . (8809 65024)))) ("hacek" . #hasheq((characters . "ˇ") (codepoints . (711)))) ("hairsp" . #hasheq((characters . " ") (codepoints . (8202)))) ("half" . #hasheq((characters . "½") (codepoints . (189)))) ("hamilt" . #hasheq((characters . "ℋ") (codepoints . (8459)))) ("hardcy" . #hasheq((characters . "Ъ") (codepoints . (1066)))) ("harr" . #hasheq((characters . "↔") (codepoints . (8596)))) ("harrcir" . #hasheq((characters . "⥈") (codepoints . (10568)))) ("harrw" . #hasheq((characters . "↭") (codepoints . (8621)))) ("hat" . #hasheq((characters . "^") (codepoints . (94)))) ("hbar" . #hasheq((characters . "ℏ") (codepoints . (8463)))) ("hcirc" . #hasheq((characters . "Ĥ") (codepoints . (292)))) ("hearts" . #hasheq((characters . "♥") (codepoints . (9829)))) ("heartsuit" . #hasheq((characters . "♥") (codepoints . (9829)))) ("hellip" . #hasheq((characters . "…") (codepoints . (8230)))) ("hercon" . #hasheq((characters . "⊹") (codepoints . (8889)))) ("hfr" . #hasheq((characters . "𝔥") (codepoints . (120101)))) ("hilbertspace" . #hasheq((characters . "ℋ") (codepoints . (8459)))) ("hksearow" . #hasheq((characters . "⤥") (codepoints . (10533)))) ("hkswarow" . #hasheq((characters . "⤦") (codepoints . (10534)))) ("hoarr" . #hasheq((characters . "⇿") (codepoints . (8703)))) ("homtht" . #hasheq((characters . "∻") (codepoints . (8763)))) ("hookleftarrow" . #hasheq((characters . "↩") (codepoints . (8617)))) ("hookrightarrow" . #hasheq((characters . "↪") (codepoints . (8618)))) ("hopf" . #hasheq((characters . "𝕙") (codepoints . (120153)))) ("horbar" . #hasheq((characters . "―") (codepoints . (8213)))) ("horizontalline" . #hasheq((characters . "─") (codepoints . (9472)))) ("hscr" . #hasheq((characters . "ℋ") (codepoints . (8459)))) ("hslash" . #hasheq((characters . "ℏ") (codepoints . (8463)))) ("hstrok" . #hasheq((characters . "Ħ") (codepoints . (294)))) ("humpdownhump" . #hasheq((characters . "≎") (codepoints . (8782)))) ("humpequal" . #hasheq((characters . "≏") (codepoints . (8783)))) ("hybull" . #hasheq((characters . "⁃") (codepoints . (8259)))) ("hyphen" . #hasheq((characters . "‐") (codepoints . (8208)))) ("iacute" . #hasheq((characters . "Í") (codepoints . (205)))) ("ic" . #hasheq((characters . "\u2063") (codepoints . (8291)))) ("icirc" . #hasheq((characters . "î") (codepoints . (238)))) ("icy" . #hasheq((characters . "И") (codepoints . (1048)))) ("idot" . #hasheq((characters . "İ") (codepoints . (304)))) ("iecy" . #hasheq((characters . "е") (codepoints . (1077)))) ("iexcl" . #hasheq((characters . "¡") (codepoints . (161)))) ("iff" . #hasheq((characters . "⇔") (codepoints . (8660)))) ("ifr" . #hasheq((characters . "𝔦") (codepoints . (120102)))) ("igrave" . #hasheq((characters . "ì") (codepoints . (236)))) ("ii" . #hasheq((characters . "ⅈ") (codepoints . (8520)))) ("iiiint" . #hasheq((characters . "⨌") (codepoints . (10764)))) ("iiint" . #hasheq((characters . "∭") (codepoints . (8749)))) ("iinfin" . #hasheq((characters . "⧜") (codepoints . (10716)))) ("iiota" . #hasheq((characters . "℩") (codepoints . (8489)))) ("ijlig" . #hasheq((characters . "ĳ") (codepoints . (307)))) ("im" . #hasheq((characters . "ℑ") (codepoints . (8465)))) ("imacr" . #hasheq((characters . "ī") (codepoints . (299)))) ("image" . #hasheq((characters . "ℑ") (codepoints . (8465)))) ("imaginaryi" . #hasheq((characters . "ⅈ") (codepoints . (8520)))) ("imagline" . #hasheq((characters . "ℐ") (codepoints . (8464)))) ("imagpart" . #hasheq((characters . "ℑ") (codepoints . (8465)))) ("imath" . #hasheq((characters . "ı") (codepoints . (305)))) ("imof" . #hasheq((characters . "⊷") (codepoints . (8887)))) ("imped" . #hasheq((characters . "Ƶ") (codepoints . (437)))) ("implies" . #hasheq((characters . "⇒") (codepoints . (8658)))) ("in" . #hasheq((characters . "∈") (codepoints . (8712)))) ("incare" . #hasheq((characters . "℅") (codepoints . (8453)))) ("infin" . #hasheq((characters . "∞") (codepoints . (8734)))) ("infintie" . #hasheq((characters . "⧝") (codepoints . (10717)))) ("inodot" . #hasheq((characters . "ı") (codepoints . (305)))) ("int" . #hasheq((characters . "∫") (codepoints . (8747)))) ("intcal" . #hasheq((characters . "⊺") (codepoints . (8890)))) ("integers" . #hasheq((characters . "ℤ") (codepoints . (8484)))) ("integral" . #hasheq((characters . "∫") (codepoints . (8747)))) ("intercal" . #hasheq((characters . "⊺") (codepoints . (8890)))) ("intersection" . #hasheq((characters . "⋂") (codepoints . (8898)))) ("intlarhk" . #hasheq((characters . "⨗") (codepoints . (10775)))) ("intprod" . #hasheq((characters . "⨼") (codepoints . (10812)))) ("invisiblecomma" . #hasheq((characters . "\u2063") (codepoints . (8291)))) ("invisibletimes" . #hasheq((characters . "\u2062") (codepoints . (8290)))) ("iocy" . #hasheq((characters . "Ё") (codepoints . (1025)))) ("iogon" . #hasheq((characters . "Į") (codepoints . (302)))) ("iopf" . #hasheq((characters . "𝕀") (codepoints . (120128)))) ("iota" . #hasheq((characters . "ι") (codepoints . (953)))) ("iprod" . #hasheq((characters . "⨼") (codepoints . (10812)))) ("iquest" . #hasheq((characters . "¿") (codepoints . (191)))) ("iscr" . #hasheq((characters . "ℐ") (codepoints . (8464)))) ("isin" . #hasheq((characters . "∈") (codepoints . (8712)))) ("isindot" . #hasheq((characters . "⋵") (codepoints . (8949)))) ("isine" . #hasheq((characters . "⋹") (codepoints . (8953)))) ("isins" . #hasheq((characters . "⋴") (codepoints . (8948)))) ("isinsv" . #hasheq((characters . "⋳") (codepoints . (8947)))) ("isinv" . #hasheq((characters . "∈") (codepoints . (8712)))) ("it" . #hasheq((characters . "\u2062") (codepoints . (8290)))) ("itilde" . #hasheq((characters . "Ĩ") (codepoints . (296)))) ("iukcy" . #hasheq((characters . "І") (codepoints . (1030)))) ("iuml" . #hasheq((characters . "Ï") (codepoints . (207)))) ("jcirc" . #hasheq((characters . "ĵ") (codepoints . (309)))) ("jcy" . #hasheq((characters . "Й") (codepoints . (1049)))) ("jfr" . #hasheq((characters . "𝔧") (codepoints . (120103)))) ("jmath" . #hasheq((characters . "ȷ") (codepoints . (567)))) ("jopf" . #hasheq((characters . "𝕛") (codepoints . (120155)))) ("jscr" . #hasheq((characters . "𝒥") (codepoints . (119973)))) ("jsercy" . #hasheq((characters . "Ј") (codepoints . (1032)))) ("jukcy" . #hasheq((characters . "Є") (codepoints . (1028)))) ("kappa" . #hasheq((characters . "Κ") (codepoints . (922)))) ("kappav" . #hasheq((characters . "ϰ") (codepoints . (1008)))) ("kcedil" . #hasheq((characters . "ķ") (codepoints . (311)))) ("kcy" . #hasheq((characters . "к") (codepoints . (1082)))) ("kfr" . #hasheq((characters . "𝔨") (codepoints . (120104)))) ("kgreen" . #hasheq((characters . "ĸ") (codepoints . (312)))) ("khcy" . #hasheq((characters . "х") (codepoints . (1093)))) ("kjcy" . #hasheq((characters . "Ќ") (codepoints . (1036)))) ("kopf" . #hasheq((characters . "𝕜") (codepoints . (120156)))) ("kscr" . #hasheq((characters . "𝓀") (codepoints . (120000)))) ("laarr" . #hasheq((characters . "⇚") (codepoints . (8666)))) ("lacute" . #hasheq((characters . "ĺ") (codepoints . (314)))) ("laemptyv" . #hasheq((characters . "⦴") (codepoints . (10676)))) ("lagran" . #hasheq((characters . "ℒ") (codepoints . (8466)))) ("lambda" . #hasheq((characters . "Λ") (codepoints . (923)))) ("lang" . #hasheq((characters . "⟪") (codepoints . (10218)))) ("langd" . #hasheq((characters . "⦑") (codepoints . (10641)))) ("langle" . #hasheq((characters . "⟨") (codepoints . (10216)))) ("lap" . #hasheq((characters . "⪅") (codepoints . (10885)))) ("laplacetrf" . #hasheq((characters . "ℒ") (codepoints . (8466)))) ("laquo" . #hasheq((characters . "«") (codepoints . (171)))) ("larr" . #hasheq((characters . "↞") (codepoints . (8606)))) ("larrb" . #hasheq((characters . "⇤") (codepoints . (8676)))) ("larrbfs" . #hasheq((characters . "⤟") (codepoints . (10527)))) ("larrfs" . #hasheq((characters . "⤝") (codepoints . (10525)))) ("larrhk" . #hasheq((characters . "↩") (codepoints . (8617)))) ("larrlp" . #hasheq((characters . "↫") (codepoints . (8619)))) ("larrpl" . #hasheq((characters . "⤹") (codepoints . (10553)))) ("larrsim" . #hasheq((characters . "⥳") (codepoints . (10611)))) ("larrtl" . #hasheq((characters . "↢") (codepoints . (8610)))) ("lat" . #hasheq((characters . "⪫") (codepoints . (10923)))) ("latail" . #hasheq((characters . "⤙") (codepoints . (10521)))) ("late" . #hasheq((characters . "⪭") (codepoints . (10925)))) ("lates" . #hasheq((characters . "⪭︀") (codepoints . (10925 65024)))) ("lbarr" . #hasheq((characters . "⤎") (codepoints . (10510)))) ("lbbrk" . #hasheq((characters . "❲") (codepoints . (10098)))) ("lbrace" . #hasheq((characters . "{") (codepoints . (123)))) ("lbrack" . #hasheq((characters . "[") (codepoints . (91)))) ("lbrke" . #hasheq((characters . "⦋") (codepoints . (10635)))) ("lbrksld" . #hasheq((characters . "⦏") (codepoints . (10639)))) ("lbrkslu" . #hasheq((characters . "⦍") (codepoints . (10637)))) ("lcaron" . #hasheq((characters . "Ľ") (codepoints . (317)))) ("lcedil" . #hasheq((characters . "Ļ") (codepoints . (315)))) ("lceil" . #hasheq((characters . "⌈") (codepoints . (8968)))) ("lcub" . #hasheq((characters . "{") (codepoints . (123)))) ("lcy" . #hasheq((characters . "Л") (codepoints . (1051)))) ("ldca" . #hasheq((characters . "⤶") (codepoints . (10550)))) ("ldquo" . #hasheq((characters . "“") (codepoints . (8220)))) ("ldquor" . #hasheq((characters . "„") (codepoints . (8222)))) ("ldrdhar" . #hasheq((characters . "⥧") (codepoints . (10599)))) ("ldrushar" . #hasheq((characters . "⥋") (codepoints . (10571)))) ("ldsh" . #hasheq((characters . "↲") (codepoints . (8626)))) ("le" . #hasheq((characters . "≦") (codepoints . (8806)))) ("leftanglebracket" . #hasheq((characters . "⟨") (codepoints . (10216)))) ("leftarrow" . #hasheq((characters . "←") (codepoints . (8592)))) ("leftarrowbar" . #hasheq((characters . "⇤") (codepoints . (8676)))) ("leftarrowrightarrow" . #hasheq((characters . "⇆") (codepoints . (8646)))) ("leftarrowtail" . #hasheq((characters . "↢") (codepoints . (8610)))) ("leftceiling" . #hasheq((characters . "⌈") (codepoints . (8968)))) ("leftdoublebracket" . #hasheq((characters . "⟦") (codepoints . (10214)))) ("leftdownteevector" . #hasheq((characters . "⥡") (codepoints . (10593)))) ("leftdownvector" . #hasheq((characters . "⇃") (codepoints . (8643)))) ("leftdownvectorbar" . #hasheq((characters . "⥙") (codepoints . (10585)))) ("leftfloor" . #hasheq((characters . "⌊") (codepoints . (8970)))) ("leftharpoondown" . #hasheq((characters . "↽") (codepoints . (8637)))) ("leftharpoonup" . #hasheq((characters . "↼") (codepoints . (8636)))) ("leftleftarrows" . #hasheq((characters . "⇇") (codepoints . (8647)))) ("leftrightarrow" . #hasheq((characters . "↔") (codepoints . (8596)))) ("leftrightarrows" . #hasheq((characters . "⇆") (codepoints . (8646)))) ("leftrightharpoons" . #hasheq((characters . "⇋") (codepoints . (8651)))) ("leftrightsquigarrow" . #hasheq((characters . "↭") (codepoints . (8621)))) ("leftrightvector" . #hasheq((characters . "⥎") (codepoints . (10574)))) ("lefttee" . #hasheq((characters . "⊣") (codepoints . (8867)))) ("leftteearrow" . #hasheq((characters . "↤") (codepoints . (8612)))) ("leftteevector" . #hasheq((characters . "⥚") (codepoints . (10586)))) ("leftthreetimes" . #hasheq((characters . "⋋") (codepoints . (8907)))) ("lefttriangle" . #hasheq((characters . "⊲") (codepoints . (8882)))) ("lefttrianglebar" . #hasheq((characters . "⧏") (codepoints . (10703)))) ("lefttriangleequal" . #hasheq((characters . "⊴") (codepoints . (8884)))) ("leftupdownvector" . #hasheq((characters . "⥑") (codepoints . (10577)))) ("leftupteevector" . #hasheq((characters . "⥠") (codepoints . (10592)))) ("leftupvector" . #hasheq((characters . "↿") (codepoints . (8639)))) ("leftupvectorbar" . #hasheq((characters . "⥘") (codepoints . (10584)))) ("leftvector" . #hasheq((characters . "↼") (codepoints . (8636)))) ("leftvectorbar" . #hasheq((characters . "⥒") (codepoints . (10578)))) ("leg" . #hasheq((characters . "⋚") (codepoints . (8922)))) ("leq" . #hasheq((characters . "≤") (codepoints . (8804)))) ("leqq" . #hasheq((characters . "≦") (codepoints . (8806)))) ("leqslant" . #hasheq((characters . "⩽") (codepoints . (10877)))) ("les" . #hasheq((characters . "⩽") (codepoints . (10877)))) ("lescc" . #hasheq((characters . "⪨") (codepoints . (10920)))) ("lesdot" . #hasheq((characters . "⩿") (codepoints . (10879)))) ("lesdoto" . #hasheq((characters . "⪁") (codepoints . (10881)))) ("lesdotor" . #hasheq((characters . "⪃") (codepoints . (10883)))) ("lesg" . #hasheq((characters . "⋚︀") (codepoints . (8922 65024)))) ("lesges" . #hasheq((characters . "⪓") (codepoints . (10899)))) ("lessapprox" . #hasheq((characters . "⪅") (codepoints . (10885)))) ("lessdot" . #hasheq((characters . "⋖") (codepoints . (8918)))) ("lesseqgtr" . #hasheq((characters . "⋚") (codepoints . (8922)))) ("lesseqqgtr" . #hasheq((characters . "⪋") (codepoints . (10891)))) ("lessequalgreater" . #hasheq((characters . "⋚") (codepoints . (8922)))) ("lessfullequal" . #hasheq((characters . "≦") (codepoints . (8806)))) ("lessgreater" . #hasheq((characters . "≶") (codepoints . (8822)))) ("lessgtr" . #hasheq((characters . "≶") (codepoints . (8822)))) ("lessless" . #hasheq((characters . "⪡") (codepoints . (10913)))) ("lesssim" . #hasheq((characters . "≲") (codepoints . (8818)))) ("lessslantequal" . #hasheq((characters . "⩽") (codepoints . (10877)))) ("lesstilde" . #hasheq((characters . "≲") (codepoints . (8818)))) ("lfisht" . #hasheq((characters . "⥼") (codepoints . (10620)))) ("lfloor" . #hasheq((characters . "⌊") (codepoints . (8970)))) ("lfr" . #hasheq((characters . "𝔏") (codepoints . (120079)))) ("lg" . #hasheq((characters . "≶") (codepoints . (8822)))) ("lge" . #hasheq((characters . "⪑") (codepoints . (10897)))) ("lhar" . #hasheq((characters . "⥢") (codepoints . (10594)))) ("lhard" . #hasheq((characters . "↽") (codepoints . (8637)))) ("lharu" . #hasheq((characters . "↼") (codepoints . (8636)))) ("lharul" . #hasheq((characters . "⥪") (codepoints . (10602)))) ("lhblk" . #hasheq((characters . "▄") (codepoints . (9604)))) ("ljcy" . #hasheq((characters . "љ") (codepoints . (1113)))) ("ll" . #hasheq((characters . "⋘") (codepoints . (8920)))) ("llarr" . #hasheq((characters . "⇇") (codepoints . (8647)))) ("llcorner" . #hasheq((characters . "⌞") (codepoints . (8990)))) ("lleftarrow" . #hasheq((characters . "⇚") (codepoints . (8666)))) ("llhard" . #hasheq((characters . "⥫") (codepoints . (10603)))) ("lltri" . #hasheq((characters . "◺") (codepoints . (9722)))) ("lmidot" . #hasheq((characters . "ŀ") (codepoints . (320)))) ("lmoust" . #hasheq((characters . "⎰") (codepoints . (9136)))) ("lmoustache" . #hasheq((characters . "⎰") (codepoints . (9136)))) ("lnap" . #hasheq((characters . "⪉") (codepoints . (10889)))) ("lnapprox" . #hasheq((characters . "⪉") (codepoints . (10889)))) ("lne" . #hasheq((characters . "≨") (codepoints . (8808)))) ("lneq" . #hasheq((characters . "⪇") (codepoints . (10887)))) ("lneqq" . #hasheq((characters . "≨") (codepoints . (8808)))) ("lnsim" . #hasheq((characters . "⋦") (codepoints . (8934)))) ("loang" . #hasheq((characters . "⟬") (codepoints . (10220)))) ("loarr" . #hasheq((characters . "⇽") (codepoints . (8701)))) ("lobrk" . #hasheq((characters . "⟦") (codepoints . (10214)))) ("longleftarrow" . #hasheq((characters . "⟵") (codepoints . (10229)))) ("longleftrightarrow" . #hasheq((characters . "⟺") (codepoints . (10234)))) ("longmapsto" . #hasheq((characters . "⟼") (codepoints . (10236)))) ("longrightarrow" . #hasheq((characters . "⟹") (codepoints . (10233)))) ("looparrowleft" . #hasheq((characters . "↫") (codepoints . (8619)))) ("looparrowright" . #hasheq((characters . "↬") (codepoints . (8620)))) ("lopar" . #hasheq((characters . "⦅") (codepoints . (10629)))) ("lopf" . #hasheq((characters . "𝕃") (codepoints . (120131)))) ("loplus" . #hasheq((characters . "⨭") (codepoints . (10797)))) ("lotimes" . #hasheq((characters . "⨴") (codepoints . (10804)))) ("lowast" . #hasheq((characters . "∗") (codepoints . (8727)))) ("lowbar" . #hasheq((characters . "_") (codepoints . (95)))) ("lowerleftarrow" . #hasheq((characters . "↙") (codepoints . (8601)))) ("lowerrightarrow" . #hasheq((characters . "↘") (codepoints . (8600)))) ("loz" . #hasheq((characters . "◊") (codepoints . (9674)))) ("lozenge" . #hasheq((characters . "◊") (codepoints . (9674)))) ("lozf" . #hasheq((characters . "⧫") (codepoints . (10731)))) ("lpar" . #hasheq((characters . "(") (codepoints . (40)))) ("lparlt" . #hasheq((characters . "⦓") (codepoints . (10643)))) ("lrarr" . #hasheq((characters . "⇆") (codepoints . (8646)))) ("lrcorner" . #hasheq((characters . "⌟") (codepoints . (8991)))) ("lrhar" . #hasheq((characters . "⇋") (codepoints . (8651)))) ("lrhard" . #hasheq((characters . "⥭") (codepoints . (10605)))) ("lrm" . #hasheq((characters . "\u200E") (codepoints . (8206)))) ("lrtri" . #hasheq((characters . "⊿") (codepoints . (8895)))) ("lsaquo" . #hasheq((characters . "‹") (codepoints . (8249)))) ("lscr" . #hasheq((characters . "𝓁") (codepoints . (120001)))) ("lsh" . #hasheq((characters . "↰") (codepoints . (8624)))) ("lsim" . #hasheq((characters . "≲") (codepoints . (8818)))) ("lsime" . #hasheq((characters . "⪍") (codepoints . (10893)))) ("lsimg" . #hasheq((characters . "⪏") (codepoints . (10895)))) ("lsqb" . #hasheq((characters . "[") (codepoints . (91)))) ("lsquo" . #hasheq((characters . "‘") (codepoints . (8216)))) ("lsquor" . #hasheq((characters . "‚") (codepoints . (8218)))) ("lstrok" . #hasheq((characters . "ł") (codepoints . (322)))) ("lt" . #hasheq((characters . "<") (codepoints . (60)))) ("ltcc" . #hasheq((characters . "⪦") (codepoints . (10918)))) ("ltcir" . #hasheq((characters . "⩹") (codepoints . (10873)))) ("ltdot" . #hasheq((characters . "⋖") (codepoints . (8918)))) ("lthree" . #hasheq((characters . "⋋") (codepoints . (8907)))) ("ltimes" . #hasheq((characters . "⋉") (codepoints . (8905)))) ("ltlarr" . #hasheq((characters . "⥶") (codepoints . (10614)))) ("ltquest" . #hasheq((characters . "⩻") (codepoints . (10875)))) ("ltri" . #hasheq((characters . "◃") (codepoints . (9667)))) ("ltrie" . #hasheq((characters . "⊴") (codepoints . (8884)))) ("ltrif" . #hasheq((characters . "◂") (codepoints . (9666)))) ("ltrpar" . #hasheq((characters . "⦖") (codepoints . (10646)))) ("lurdshar" . #hasheq((characters . "⥊") (codepoints . (10570)))) ("luruhar" . #hasheq((characters . "⥦") (codepoints . (10598)))) ("lvertneqq" . #hasheq((characters . "≨︀") (codepoints . (8808 65024)))) ("lvne" . #hasheq((characters . "≨︀") (codepoints . (8808 65024)))) ("macr" . #hasheq((characters . "¯") (codepoints . (175)))) ("male" . #hasheq((characters . "♂") (codepoints . (9794)))) ("malt" . #hasheq((characters . "✠") (codepoints . (10016)))) ("maltese" . #hasheq((characters . "✠") (codepoints . (10016)))) ("map" . #hasheq((characters . "⤅") (codepoints . (10501)))) ("mapsto" . #hasheq((characters . "↦") (codepoints . (8614)))) ("mapstodown" . #hasheq((characters . "↧") (codepoints . (8615)))) ("mapstoleft" . #hasheq((characters . "↤") (codepoints . (8612)))) ("mapstoup" . #hasheq((characters . "↥") (codepoints . (8613)))) ("marker" . #hasheq((characters . "▮") (codepoints . (9646)))) ("mcomma" . #hasheq((characters . "⨩") (codepoints . (10793)))) ("mcy" . #hasheq((characters . "м") (codepoints . (1084)))) ("mdash" . #hasheq((characters . "—") (codepoints . (8212)))) ("mddot" . #hasheq((characters . "∺") (codepoints . (8762)))) ("measuredangle" . #hasheq((characters . "∡") (codepoints . (8737)))) ("mediumspace" . #hasheq((characters . " ") (codepoints . (8287)))) ("mellintrf" . #hasheq((characters . "ℳ") (codepoints . (8499)))) ("mfr" . #hasheq((characters . "𝔪") (codepoints . (120106)))) ("mho" . #hasheq((characters . "℧") (codepoints . (8487)))) ("micro" . #hasheq((characters . "µ") (codepoints . (181)))) ("mid" . #hasheq((characters . "∣") (codepoints . (8739)))) ("midast" . #hasheq((characters . "*") (codepoints . (42)))) ("midcir" . #hasheq((characters . "⫰") (codepoints . (10992)))) ("middot" . #hasheq((characters . "·") (codepoints . (183)))) ("minus" . #hasheq((characters . "−") (codepoints . (8722)))) ("minusb" . #hasheq((characters . "⊟") (codepoints . (8863)))) ("minusd" . #hasheq((characters . "∸") (codepoints . (8760)))) ("minusdu" . #hasheq((characters . "⨪") (codepoints . (10794)))) ("minusplus" . #hasheq((characters . "∓") (codepoints . (8723)))) ("mlcp" . #hasheq((characters . "⫛") (codepoints . (10971)))) ("mldr" . #hasheq((characters . "…") (codepoints . (8230)))) ("mnplus" . #hasheq((characters . "∓") (codepoints . (8723)))) ("models" . #hasheq((characters . "⊧") (codepoints . (8871)))) ("mopf" . #hasheq((characters . "𝕄") (codepoints . (120132)))) ("mp" . #hasheq((characters . "∓") (codepoints . (8723)))) ("mscr" . #hasheq((characters . "ℳ") (codepoints . (8499)))) ("mstpos" . #hasheq((characters . "∾") (codepoints . (8766)))) ("mu" . #hasheq((characters . "μ") (codepoints . (956)))) ("multimap" . #hasheq((characters . "⊸") (codepoints . (8888)))) ("mumap" . #hasheq((characters . "⊸") (codepoints . (8888)))) ("nabla" . #hasheq((characters . "∇") (codepoints . (8711)))) ("nacute" . #hasheq((characters . "ń") (codepoints . (324)))) ("nang" . #hasheq((characters . "∠⃒") (codepoints . (8736 8402)))) ("nap" . #hasheq((characters . "≉") (codepoints . (8777)))) ("nape" . #hasheq((characters . "⩰̸") (codepoints . (10864 824)))) ("napid" . #hasheq((characters . "≋̸") (codepoints . (8779 824)))) ("napos" . #hasheq((characters . "ŉ") (codepoints . (329)))) ("napprox" . #hasheq((characters . "≉") (codepoints . (8777)))) ("natur" . #hasheq((characters . "♮") (codepoints . (9838)))) ("natural" . #hasheq((characters . "♮") (codepoints . (9838)))) ("naturals" . #hasheq((characters . "ℕ") (codepoints . (8469)))) ("nbsp" . #hasheq((characters . " ") (codepoints . (160)))) ("nbump" . #hasheq((characters . "≎̸") (codepoints . (8782 824)))) ("nbumpe" . #hasheq((characters . "≏̸") (codepoints . (8783 824)))) ("ncap" . #hasheq((characters . "⩃") (codepoints . (10819)))) ("ncaron" . #hasheq((characters . "Ň") (codepoints . (327)))) ("ncedil" . #hasheq((characters . "Ņ") (codepoints . (325)))) ("ncong" . #hasheq((characters . "≇") (codepoints . (8775)))) ("ncongdot" . #hasheq((characters . "⩭̸") (codepoints . (10861 824)))) ("ncup" . #hasheq((characters . "⩂") (codepoints . (10818)))) ("ncy" . #hasheq((characters . "Н") (codepoints . (1053)))) ("ndash" . #hasheq((characters . "–") (codepoints . (8211)))) ("ne" . #hasheq((characters . "≠") (codepoints . (8800)))) ("nearhk" . #hasheq((characters . "⤤") (codepoints . (10532)))) ("nearr" . #hasheq((characters . "⇗") (codepoints . (8663)))) ("nearrow" . #hasheq((characters . "↗") (codepoints . (8599)))) ("nedot" . #hasheq((characters . "≐̸") (codepoints . (8784 824)))) ("negativemediumspace" . #hasheq((characters . "\u200B") (codepoints . (8203)))) ("negativethickspace" . #hasheq((characters . "\u200B") (codepoints . (8203)))) ("negativethinspace" . #hasheq((characters . "\u200B") (codepoints . (8203)))) ("negativeverythinspace" . #hasheq((characters . "\u200B") (codepoints . (8203)))) ("nequiv" . #hasheq((characters . "≢") (codepoints . (8802)))) ("nesear" . #hasheq((characters . "⤨") (codepoints . (10536)))) ("nesim" . #hasheq((characters . "≂̸") (codepoints . (8770 824)))) ("nestedgreatergreater" . #hasheq((characters . "≫") (codepoints . (8811)))) ("nestedlessless" . #hasheq((characters . "≪") (codepoints . (8810)))) ("newline" . #hasheq((characters . "\n") (codepoints . (10)))) ("nexist" . #hasheq((characters . "∄") (codepoints . (8708)))) ("nexists" . #hasheq((characters . "∄") (codepoints . (8708)))) ("nfr" . #hasheq((characters . "𝔑") (codepoints . (120081)))) ("nge" . #hasheq((characters . "≧̸") (codepoints . (8807 824)))) ("ngeq" . #hasheq((characters . "≱") (codepoints . (8817)))) ("ngeqq" . #hasheq((characters . "≧̸") (codepoints . (8807 824)))) ("ngeqslant" . #hasheq((characters . "⩾̸") (codepoints . (10878 824)))) ("nges" . #hasheq((characters . "⩾̸") (codepoints . (10878 824)))) ("ngg" . #hasheq((characters . "⋙̸") (codepoints . (8921 824)))) ("ngsim" . #hasheq((characters . "≵") (codepoints . (8821)))) ("ngt" . #hasheq((characters . "≯") (codepoints . (8815)))) ("ngtr" . #hasheq((characters . "≯") (codepoints . (8815)))) ("ngtv" . #hasheq((characters . "≫̸") (codepoints . (8811 824)))) ("nharr" . #hasheq((characters . "⇎") (codepoints . (8654)))) ("nhpar" . #hasheq((characters . "⫲") (codepoints . (10994)))) ("ni" . #hasheq((characters . "∋") (codepoints . (8715)))) ("nis" . #hasheq((characters . "⋼") (codepoints . (8956)))) ("nisd" . #hasheq((characters . "⋺") (codepoints . (8954)))) ("niv" . #hasheq((characters . "∋") (codepoints . (8715)))) ("njcy" . #hasheq((characters . "њ") (codepoints . (1114)))) ("nlarr" . #hasheq((characters . "⇍") (codepoints . (8653)))) ("nldr" . #hasheq((characters . "‥") (codepoints . (8229)))) ("nle" . #hasheq((characters . "≰") (codepoints . (8816)))) ("nleftarrow" . #hasheq((characters . "⇍") (codepoints . (8653)))) ("nleftrightarrow" . #hasheq((characters . "↮") (codepoints . (8622)))) ("nleq" . #hasheq((characters . "≰") (codepoints . (8816)))) ("nleqq" . #hasheq((characters . "≦̸") (codepoints . (8806 824)))) ("nleqslant" . #hasheq((characters . "⩽̸") (codepoints . (10877 824)))) ("nles" . #hasheq((characters . "⩽̸") (codepoints . (10877 824)))) ("nless" . #hasheq((characters . "≮") (codepoints . (8814)))) ("nll" . #hasheq((characters . "⋘̸") (codepoints . (8920 824)))) ("nlsim" . #hasheq((characters . "≴") (codepoints . (8820)))) ("nlt" . #hasheq((characters . "≪⃒") (codepoints . (8810 8402)))) ("nltri" . #hasheq((characters . "⋪") (codepoints . (8938)))) ("nltrie" . #hasheq((characters . "⋬") (codepoints . (8940)))) ("nltv" . #hasheq((characters . "≪̸") (codepoints . (8810 824)))) ("nmid" . #hasheq((characters . "∤") (codepoints . (8740)))) ("nobreak" . #hasheq((characters . "\u2060") (codepoints . (8288)))) ("nonbreakingspace" . #hasheq((characters . " ") (codepoints . (160)))) ("nopf" . #hasheq((characters . "𝕟") (codepoints . (120159)))) ("not" . #hasheq((characters . "⫬") (codepoints . (10988)))) ("notcongruent" . #hasheq((characters . "≢") (codepoints . (8802)))) ("notcupcap" . #hasheq((characters . "≭") (codepoints . (8813)))) ("notdoubleverticalbar" . #hasheq((characters . "∦") (codepoints . (8742)))) ("notelement" . #hasheq((characters . "∉") (codepoints . (8713)))) ("notequal" . #hasheq((characters . "≠") (codepoints . (8800)))) ("notequaltilde" . #hasheq((characters . "≂̸") (codepoints . (8770 824)))) ("notexists" . #hasheq((characters . "∄") (codepoints . (8708)))) ("notgreater" . #hasheq((characters . "≯") (codepoints . (8815)))) ("notgreaterequal" . #hasheq((characters . "≱") (codepoints . (8817)))) ("notgreaterfullequal" . #hasheq((characters . "≧̸") (codepoints . (8807 824)))) ("notgreatergreater" . #hasheq((characters . "≫̸") (codepoints . (8811 824)))) ("notgreaterless" . #hasheq((characters . "≹") (codepoints . (8825)))) ("notgreaterslantequal" . #hasheq((characters . "⩾̸") (codepoints . (10878 824)))) ("notgreatertilde" . #hasheq((characters . "≵") (codepoints . (8821)))) ("nothumpdownhump" . #hasheq((characters . "≎̸") (codepoints . (8782 824)))) ("nothumpequal" . #hasheq((characters . "≏̸") (codepoints . (8783 824)))) ("notin" . #hasheq((characters . "∉") (codepoints . (8713)))) ("notindot" . #hasheq((characters . "⋵̸") (codepoints . (8949 824)))) ("notine" . #hasheq((characters . "⋹̸") (codepoints . (8953 824)))) ("notinva" . #hasheq((characters . "∉") (codepoints . (8713)))) ("notinvb" . #hasheq((characters . "⋷") (codepoints . (8951)))) ("notinvc" . #hasheq((characters . "⋶") (codepoints . (8950)))) ("notlefttriangle" . #hasheq((characters . "⋪") (codepoints . (8938)))) ("notlefttrianglebar" . #hasheq((characters . "⧏̸") (codepoints . (10703 824)))) ("notlefttriangleequal" . #hasheq((characters . "⋬") (codepoints . (8940)))) ("notless" . #hasheq((characters . "≮") (codepoints . (8814)))) ("notlessequal" . #hasheq((characters . "≰") (codepoints . (8816)))) ("notlessgreater" . #hasheq((characters . "≸") (codepoints . (8824)))) ("notlessless" . #hasheq((characters . "≪̸") (codepoints . (8810 824)))) ("notlessslantequal" . #hasheq((characters . "⩽̸") (codepoints . (10877 824)))) ("notlesstilde" . #hasheq((characters . "≴") (codepoints . (8820)))) ("notnestedgreatergreater" . #hasheq((characters . "⪢̸") (codepoints . (10914 824)))) ("notnestedlessless" . #hasheq((characters . "⪡̸") (codepoints . (10913 824)))) ("notni" . #hasheq((characters . "∌") (codepoints . (8716)))) ("notniva" . #hasheq((characters . "∌") (codepoints . (8716)))) ("notnivb" . #hasheq((characters . "⋾") (codepoints . (8958)))) ("notnivc" . #hasheq((characters . "⋽") (codepoints . (8957)))) ("notprecedes" . #hasheq((characters . "⊀") (codepoints . (8832)))) ("notprecedesequal" . #hasheq((characters . "⪯̸") (codepoints . (10927 824)))) ("notprecedesslantequal" . #hasheq((characters . "⋠") (codepoints . (8928)))) ("notreverseelement" . #hasheq((characters . "∌") (codepoints . (8716)))) ("notrighttriangle" . #hasheq((characters . "⋫") (codepoints . (8939)))) ("notrighttrianglebar" . #hasheq((characters . "⧐̸") (codepoints . (10704 824)))) ("notrighttriangleequal" . #hasheq((characters . "⋭") (codepoints . (8941)))) ("notsquaresubset" . #hasheq((characters . "⊏̸") (codepoints . (8847 824)))) ("notsquaresubsetequal" . #hasheq((characters . "⋢") (codepoints . (8930)))) ("notsquaresuperset" . #hasheq((characters . "⊐̸") (codepoints . (8848 824)))) ("notsquaresupersetequal" . #hasheq((characters . "⋣") (codepoints . (8931)))) ("notsubset" . #hasheq((characters . "⊂⃒") (codepoints . (8834 8402)))) ("notsubsetequal" . #hasheq((characters . "⊈") (codepoints . (8840)))) ("notsucceeds" . #hasheq((characters . "⊁") (codepoints . (8833)))) ("notsucceedsequal" . #hasheq((characters . "⪰̸") (codepoints . (10928 824)))) ("notsucceedsslantequal" . #hasheq((characters . "⋡") (codepoints . (8929)))) ("notsucceedstilde" . #hasheq((characters . "≿̸") (codepoints . (8831 824)))) ("notsuperset" . #hasheq((characters . "⊃⃒") (codepoints . (8835 8402)))) ("notsupersetequal" . #hasheq((characters . "⊉") (codepoints . (8841)))) ("nottilde" . #hasheq((characters . "≁") (codepoints . (8769)))) ("nottildeequal" . #hasheq((characters . "≄") (codepoints . (8772)))) ("nottildefullequal" . #hasheq((characters . "≇") (codepoints . (8775)))) ("nottildetilde" . #hasheq((characters . "≉") (codepoints . (8777)))) ("notverticalbar" . #hasheq((characters . "∤") (codepoints . (8740)))) ("npar" . #hasheq((characters . "∦") (codepoints . (8742)))) ("nparallel" . #hasheq((characters . "∦") (codepoints . (8742)))) ("nparsl" . #hasheq((characters . "⫽⃥") (codepoints . (11005 8421)))) ("npart" . #hasheq((characters . "∂̸") (codepoints . (8706 824)))) ("npolint" . #hasheq((characters . "⨔") (codepoints . (10772)))) ("npr" . #hasheq((characters . "⊀") (codepoints . (8832)))) ("nprcue" . #hasheq((characters . "⋠") (codepoints . (8928)))) ("npre" . #hasheq((characters . "⪯̸") (codepoints . (10927 824)))) ("nprec" . #hasheq((characters . "⊀") (codepoints . (8832)))) ("npreceq" . #hasheq((characters . "⪯̸") (codepoints . (10927 824)))) ("nrarr" . #hasheq((characters . "⇏") (codepoints . (8655)))) ("nrarrc" . #hasheq((characters . "⤳̸") (codepoints . (10547 824)))) ("nrarrw" . #hasheq((characters . "↝̸") (codepoints . (8605 824)))) ("nrightarrow" . #hasheq((characters . "⇏") (codepoints . (8655)))) ("nrtri" . #hasheq((characters . "⋫") (codepoints . (8939)))) ("nrtrie" . #hasheq((characters . "⋭") (codepoints . (8941)))) ("nsc" . #hasheq((characters . "⊁") (codepoints . (8833)))) ("nsccue" . #hasheq((characters . "⋡") (codepoints . (8929)))) ("nsce" . #hasheq((characters . "⪰̸") (codepoints . (10928 824)))) ("nscr" . #hasheq((characters . "𝓃") (codepoints . (120003)))) ("nshortmid" . #hasheq((characters . "∤") (codepoints . (8740)))) ("nshortparallel" . #hasheq((characters . "∦") (codepoints . (8742)))) ("nsim" . #hasheq((characters . "≁") (codepoints . (8769)))) ("nsime" . #hasheq((characters . "≄") (codepoints . (8772)))) ("nsimeq" . #hasheq((characters . "≄") (codepoints . (8772)))) ("nsmid" . #hasheq((characters . "∤") (codepoints . (8740)))) ("nspar" . #hasheq((characters . "∦") (codepoints . (8742)))) ("nsqsube" . #hasheq((characters . "⋢") (codepoints . (8930)))) ("nsqsupe" . #hasheq((characters . "⋣") (codepoints . (8931)))) ("nsub" . #hasheq((characters . "⊄") (codepoints . (8836)))) ("nsube" . #hasheq((characters . "⫅̸") (codepoints . (10949 824)))) ("nsubset" . #hasheq((characters . "⊂⃒") (codepoints . (8834 8402)))) ("nsubseteq" . #hasheq((characters . "⊈") (codepoints . (8840)))) ("nsubseteqq" . #hasheq((characters . "⫅̸") (codepoints . (10949 824)))) ("nsucc" . #hasheq((characters . "⊁") (codepoints . (8833)))) ("nsucceq" . #hasheq((characters . "⪰̸") (codepoints . (10928 824)))) ("nsup" . #hasheq((characters . "⊅") (codepoints . (8837)))) ("nsupe" . #hasheq((characters . "⊉") (codepoints . (8841)))) ("nsupset" . #hasheq((characters . "⊃⃒") (codepoints . (8835 8402)))) ("nsupseteq" . #hasheq((characters . "⊉") (codepoints . (8841)))) ("nsupseteqq" . #hasheq((characters . "⫆̸") (codepoints . (10950 824)))) ("ntgl" . #hasheq((characters . "≹") (codepoints . (8825)))) ("ntilde" . #hasheq((characters . "ñ") (codepoints . (241)))) ("ntlg" . #hasheq((characters . "≸") (codepoints . (8824)))) ("ntriangleleft" . #hasheq((characters . "⋪") (codepoints . (8938)))) ("ntrianglelefteq" . #hasheq((characters . "⋬") (codepoints . (8940)))) ("ntriangleright" . #hasheq((characters . "⋫") (codepoints . (8939)))) ("ntrianglerighteq" . #hasheq((characters . "⋭") (codepoints . (8941)))) ("nu" . #hasheq((characters . "ν") (codepoints . (957)))) ("num" . #hasheq((characters . "#") (codepoints . (35)))) ("numero" . #hasheq((characters . "№") (codepoints . (8470)))) ("numsp" . #hasheq((characters . " ") (codepoints . (8199)))) ("nvap" . #hasheq((characters . "≍⃒") (codepoints . (8781 8402)))) ("nvdash" . #hasheq((characters . "⊬") (codepoints . (8876)))) ("nvge" . #hasheq((characters . "≥⃒") (codepoints . (8805 8402)))) ("nvgt" . #hasheq((characters . ">⃒") (codepoints . (62 8402)))) ("nvharr" . #hasheq((characters . "⤄") (codepoints . (10500)))) ("nvinfin" . #hasheq((characters . "⧞") (codepoints . (10718)))) ("nvlarr" . #hasheq((characters . "⤂") (codepoints . (10498)))) ("nvle" . #hasheq((characters . "≤⃒") (codepoints . (8804 8402)))) ("nvlt" . #hasheq((characters . "<⃒") (codepoints . (60 8402)))) ("nvltrie" . #hasheq((characters . "⊴⃒") (codepoints . (8884 8402)))) ("nvrarr" . #hasheq((characters . "⤃") (codepoints . (10499)))) ("nvrtrie" . #hasheq((characters . "⊵⃒") (codepoints . (8885 8402)))) ("nvsim" . #hasheq((characters . "∼⃒") (codepoints . (8764 8402)))) ("nwarhk" . #hasheq((characters . "⤣") (codepoints . (10531)))) ("nwarr" . #hasheq((characters . "↖") (codepoints . (8598)))) ("nwarrow" . #hasheq((characters . "↖") (codepoints . (8598)))) ("nwnear" . #hasheq((characters . "⤧") (codepoints . (10535)))) ("oacute" . #hasheq((characters . "Ó") (codepoints . (211)))) ("oast" . #hasheq((characters . "⊛") (codepoints . (8859)))) ("ocir" . #hasheq((characters . "⊚") (codepoints . (8858)))) ("ocirc" . #hasheq((characters . "Ô") (codepoints . (212)))) ("ocy" . #hasheq((characters . "О") (codepoints . (1054)))) ("odash" . #hasheq((characters . "⊝") (codepoints . (8861)))) ("odblac" . #hasheq((characters . "Ő") (codepoints . (336)))) ("odiv" . #hasheq((characters . "⨸") (codepoints . (10808)))) ("odot" . #hasheq((characters . "⊙") (codepoints . (8857)))) ("odsold" . #hasheq((characters . "⦼") (codepoints . (10684)))) ("oelig" . #hasheq((characters . "Œ") (codepoints . (338)))) ("ofcir" . #hasheq((characters . "⦿") (codepoints . (10687)))) ("ofr" . #hasheq((characters . "𝔬") (codepoints . (120108)))) ("ogon" . #hasheq((characters . "˛") (codepoints . (731)))) ("ograve" . #hasheq((characters . "ò") (codepoints . (242)))) ("ogt" . #hasheq((characters . "⧁") (codepoints . (10689)))) ("ohbar" . #hasheq((characters . "⦵") (codepoints . (10677)))) ("ohm" . #hasheq((characters . "Ω") (codepoints . (937)))) ("oint" . #hasheq((characters . "∮") (codepoints . (8750)))) ("olarr" . #hasheq((characters . "↺") (codepoints . (8634)))) ("olcir" . #hasheq((characters . "⦾") (codepoints . (10686)))) ("olcross" . #hasheq((characters . "⦻") (codepoints . (10683)))) ("oline" . #hasheq((characters . "‾") (codepoints . (8254)))) ("olt" . #hasheq((characters . "⧀") (codepoints . (10688)))) ("omacr" . #hasheq((characters . "Ō") (codepoints . (332)))) ("omega" . #hasheq((characters . "ω") (codepoints . (969)))) ("omicron" . #hasheq((characters . "Ο") (codepoints . (927)))) ("omid" . #hasheq((characters . "⦶") (codepoints . (10678)))) ("ominus" . #hasheq((characters . "⊖") (codepoints . (8854)))) ("oopf" . #hasheq((characters . "𝕠") (codepoints . (120160)))) ("opar" . #hasheq((characters . "⦷") (codepoints . (10679)))) ("opencurlydoublequote" . #hasheq((characters . "“") (codepoints . (8220)))) ("opencurlyquote" . #hasheq((characters . "‘") (codepoints . (8216)))) ("operp" . #hasheq((characters . "⦹") (codepoints . (10681)))) ("oplus" . #hasheq((characters . "⊕") (codepoints . (8853)))) ("or" . #hasheq((characters . "⩔") (codepoints . (10836)))) ("orarr" . #hasheq((characters . "↻") (codepoints . (8635)))) ("ord" . #hasheq((characters . "⩝") (codepoints . (10845)))) ("order" . #hasheq((characters . "ℴ") (codepoints . (8500)))) ("orderof" . #hasheq((characters . "ℴ") (codepoints . (8500)))) ("ordf" . #hasheq((characters . "ª") (codepoints . (170)))) ("ordm" . #hasheq((characters . "º") (codepoints . (186)))) ("origof" . #hasheq((characters . "⊶") (codepoints . (8886)))) ("oror" . #hasheq((characters . "⩖") (codepoints . (10838)))) ("orslope" . #hasheq((characters . "⩗") (codepoints . (10839)))) ("orv" . #hasheq((characters . "⩛") (codepoints . (10843)))) ("os" . #hasheq((characters . "Ⓢ") (codepoints . (9416)))) ("oscr" . #hasheq((characters . "𝒪") (codepoints . (119978)))) ("oslash" . #hasheq((characters . "ø") (codepoints . (248)))) ("osol" . #hasheq((characters . "⊘") (codepoints . (8856)))) ("otilde" . #hasheq((characters . "Õ") (codepoints . (213)))) ("otimes" . #hasheq((characters . "⊗") (codepoints . (8855)))) ("otimesas" . #hasheq((characters . "⨶") (codepoints . (10806)))) ("ouml" . #hasheq((characters . "ö") (codepoints . (246)))) ("ovbar" . #hasheq((characters . "⌽") (codepoints . (9021)))) ("overbar" . #hasheq((characters . "‾") (codepoints . (8254)))) ("overbrace" . #hasheq((characters . "⏞") (codepoints . (9182)))) ("overbracket" . #hasheq((characters . "⎴") (codepoints . (9140)))) ("overparenthesis" . #hasheq((characters . "⏜") (codepoints . (9180)))) ("par" . #hasheq((characters . "∥") (codepoints . (8741)))) ("para" . #hasheq((characters . "¶") (codepoints . (182)))) ("parallel" . #hasheq((characters . "∥") (codepoints . (8741)))) ("parsim" . #hasheq((characters . "⫳") (codepoints . (10995)))) ("parsl" . #hasheq((characters . "⫽") (codepoints . (11005)))) ("part" . #hasheq((characters . "∂") (codepoints . (8706)))) ("partiald" . #hasheq((characters . "∂") (codepoints . (8706)))) ("pcy" . #hasheq((characters . "П") (codepoints . (1055)))) ("percnt" . #hasheq((characters . "%") (codepoints . (37)))) ("period" . #hasheq((characters . ".") (codepoints . (46)))) ("permil" . #hasheq((characters . "‰") (codepoints . (8240)))) ("perp" . #hasheq((characters . "⊥") (codepoints . (8869)))) ("pertenk" . #hasheq((characters . "‱") (codepoints . (8241)))) ("pfr" . #hasheq((characters . "𝔓") (codepoints . (120083)))) ("phi" . #hasheq((characters . "Φ") (codepoints . (934)))) ("phiv" . #hasheq((characters . "ϕ") (codepoints . (981)))) ("phmmat" . #hasheq((characters . "ℳ") (codepoints . (8499)))) ("phone" . #hasheq((characters . "☎") (codepoints . (9742)))) ("pi" . #hasheq((characters . "π") (codepoints . (960)))) ("pitchfork" . #hasheq((characters . "⋔") (codepoints . (8916)))) ("piv" . #hasheq((characters . "ϖ") (codepoints . (982)))) ("planck" . #hasheq((characters . "ℏ") (codepoints . (8463)))) ("planckh" . #hasheq((characters . "ℎ") (codepoints . (8462)))) ("plankv" . #hasheq((characters . "ℏ") (codepoints . (8463)))) ("plus" . #hasheq((characters . "+") (codepoints . (43)))) ("plusacir" . #hasheq((characters . "⨣") (codepoints . (10787)))) ("plusb" . #hasheq((characters . "⊞") (codepoints . (8862)))) ("pluscir" . #hasheq((characters . "⨢") (codepoints . (10786)))) ("plusdo" . #hasheq((characters . "∔") (codepoints . (8724)))) ("plusdu" . #hasheq((characters . "⨥") (codepoints . (10789)))) ("pluse" . #hasheq((characters . "⩲") (codepoints . (10866)))) ("plusminus" . #hasheq((characters . "±") (codepoints . (177)))) ("plusmn" . #hasheq((characters . "±") (codepoints . (177)))) ("plussim" . #hasheq((characters . "⨦") (codepoints . (10790)))) ("plustwo" . #hasheq((characters . "⨧") (codepoints . (10791)))) ("pm" . #hasheq((characters . "±") (codepoints . (177)))) ("poincareplane" . #hasheq((characters . "ℌ") (codepoints . (8460)))) ("pointint" . #hasheq((characters . "⨕") (codepoints . (10773)))) ("popf" . #hasheq((characters . "𝕡") (codepoints . (120161)))) ("pound" . #hasheq((characters . "£") (codepoints . (163)))) ("pr" . #hasheq((characters . "⪻") (codepoints . (10939)))) ("prap" . #hasheq((characters . "⪷") (codepoints . (10935)))) ("prcue" . #hasheq((characters . "≼") (codepoints . (8828)))) ("pre" . #hasheq((characters . "⪳") (codepoints . (10931)))) ("prec" . #hasheq((characters . "≺") (codepoints . (8826)))) ("precapprox" . #hasheq((characters . "⪷") (codepoints . (10935)))) ("preccurlyeq" . #hasheq((characters . "≼") (codepoints . (8828)))) ("precedes" . #hasheq((characters . "≺") (codepoints . (8826)))) ("precedesequal" . #hasheq((characters . "⪯") (codepoints . (10927)))) ("precedesslantequal" . #hasheq((characters . "≼") (codepoints . (8828)))) ("precedestilde" . #hasheq((characters . "≾") (codepoints . (8830)))) ("preceq" . #hasheq((characters . "⪯") (codepoints . (10927)))) ("precnapprox" . #hasheq((characters . "⪹") (codepoints . (10937)))) ("precneqq" . #hasheq((characters . "⪵") (codepoints . (10933)))) ("precnsim" . #hasheq((characters . "⋨") (codepoints . (8936)))) ("precsim" . #hasheq((characters . "≾") (codepoints . (8830)))) ("prime" . #hasheq((characters . "′") (codepoints . (8242)))) ("primes" . #hasheq((characters . "ℙ") (codepoints . (8473)))) ("prnap" . #hasheq((characters . "⪹") (codepoints . (10937)))) ("prne" . #hasheq((characters . "⪵") (codepoints . (10933)))) ("prnsim" . #hasheq((characters . "⋨") (codepoints . (8936)))) ("prod" . #hasheq((characters . "∏") (codepoints . (8719)))) ("product" . #hasheq((characters . "∏") (codepoints . (8719)))) ("profalar" . #hasheq((characters . "⌮") (codepoints . (9006)))) ("profline" . #hasheq((characters . "⌒") (codepoints . (8978)))) ("profsurf" . #hasheq((characters . "⌓") (codepoints . (8979)))) ("prop" . #hasheq((characters . "∝") (codepoints . (8733)))) ("proportion" . #hasheq((characters . "∷") (codepoints . (8759)))) ("proportional" . #hasheq((characters . "∝") (codepoints . (8733)))) ("propto" . #hasheq((characters . "∝") (codepoints . (8733)))) ("prsim" . #hasheq((characters . "≾") (codepoints . (8830)))) ("prurel" . #hasheq((characters . "⊰") (codepoints . (8880)))) ("pscr" . #hasheq((characters . "𝓅") (codepoints . (120005)))) ("psi" . #hasheq((characters . "Ψ") (codepoints . (936)))) ("puncsp" . #hasheq((characters . " ") (codepoints . (8200)))) ("qfr" . #hasheq((characters . "𝔮") (codepoints . (120110)))) ("qint" . #hasheq((characters . "⨌") (codepoints . (10764)))) ("qopf" . #hasheq((characters . "ℚ") (codepoints . (8474)))) ("qprime" . #hasheq((characters . "⁗") (codepoints . (8279)))) ("qscr" . #hasheq((characters . "𝒬") (codepoints . (119980)))) ("quaternions" . #hasheq((characters . "ℍ") (codepoints . (8461)))) ("quatint" . #hasheq((characters . "⨖") (codepoints . (10774)))) ("quest" . #hasheq((characters . "?") (codepoints . (63)))) ("questeq" . #hasheq((characters . "≟") (codepoints . (8799)))) ("quot" . #hasheq((characters . "\"") (codepoints . (34)))) ("raarr" . #hasheq((characters . "⇛") (codepoints . (8667)))) ("race" . #hasheq((characters . "∽̱") (codepoints . (8765 817)))) ("racute" . #hasheq((characters . "Ŕ") (codepoints . (340)))) ("radic" . #hasheq((characters . "√") (codepoints . (8730)))) ("raemptyv" . #hasheq((characters . "⦳") (codepoints . (10675)))) ("rang" . #hasheq((characters . "⟫") (codepoints . (10219)))) ("rangd" . #hasheq((characters . "⦒") (codepoints . (10642)))) ("range" . #hasheq((characters . "⦥") (codepoints . (10661)))) ("rangle" . #hasheq((characters . "⟩") (codepoints . (10217)))) ("raquo" . #hasheq((characters . "»") (codepoints . (187)))) ("rarr" . #hasheq((characters . "↠") (codepoints . (8608)))) ("rarrap" . #hasheq((characters . "⥵") (codepoints . (10613)))) ("rarrb" . #hasheq((characters . "⇥") (codepoints . (8677)))) ("rarrbfs" . #hasheq((characters . "⤠") (codepoints . (10528)))) ("rarrc" . #hasheq((characters . "⤳") (codepoints . (10547)))) ("rarrfs" . #hasheq((characters . "⤞") (codepoints . (10526)))) ("rarrhk" . #hasheq((characters . "↪") (codepoints . (8618)))) ("rarrlp" . #hasheq((characters . "↬") (codepoints . (8620)))) ("rarrpl" . #hasheq((characters . "⥅") (codepoints . (10565)))) ("rarrsim" . #hasheq((characters . "⥴") (codepoints . (10612)))) ("rarrtl" . #hasheq((characters . "↣") (codepoints . (8611)))) ("rarrw" . #hasheq((characters . "↝") (codepoints . (8605)))) ("ratail" . #hasheq((characters . "⤜") (codepoints . (10524)))) ("ratio" . #hasheq((characters . "∶") (codepoints . (8758)))) ("rationals" . #hasheq((characters . "ℚ") (codepoints . (8474)))) ("rbarr" . #hasheq((characters . "⤍") (codepoints . (10509)))) ("rbbrk" . #hasheq((characters . "❳") (codepoints . (10099)))) ("rbrace" . #hasheq((characters . "}") (codepoints . (125)))) ("rbrack" . #hasheq((characters . "]") (codepoints . (93)))) ("rbrke" . #hasheq((characters . "⦌") (codepoints . (10636)))) ("rbrksld" . #hasheq((characters . "⦎") (codepoints . (10638)))) ("rbrkslu" . #hasheq((characters . "⦐") (codepoints . (10640)))) ("rcaron" . #hasheq((characters . "ř") (codepoints . (345)))) ("rcedil" . #hasheq((characters . "Ŗ") (codepoints . (342)))) ("rceil" . #hasheq((characters . "⌉") (codepoints . (8969)))) ("rcub" . #hasheq((characters . "}") (codepoints . (125)))) ("rcy" . #hasheq((characters . "р") (codepoints . (1088)))) ("rdca" . #hasheq((characters . "⤷") (codepoints . (10551)))) ("rdldhar" . #hasheq((characters . "⥩") (codepoints . (10601)))) ("rdquo" . #hasheq((characters . "”") (codepoints . (8221)))) ("rdquor" . #hasheq((characters . "”") (codepoints . (8221)))) ("rdsh" . #hasheq((characters . "↳") (codepoints . (8627)))) ("re" . #hasheq((characters . "ℜ") (codepoints . (8476)))) ("real" . #hasheq((characters . "ℜ") (codepoints . (8476)))) ("realine" . #hasheq((characters . "ℛ") (codepoints . (8475)))) ("realpart" . #hasheq((characters . "ℜ") (codepoints . (8476)))) ("reals" . #hasheq((characters . "ℝ") (codepoints . (8477)))) ("rect" . #hasheq((characters . "▭") (codepoints . (9645)))) ("reg" . #hasheq((characters . "®") (codepoints . (174)))) ("reverseelement" . #hasheq((characters . "∋") (codepoints . (8715)))) ("reverseequilibrium" . #hasheq((characters . "⇋") (codepoints . (8651)))) ("reverseupequilibrium" . #hasheq((characters . "⥯") (codepoints . (10607)))) ("rfisht" . #hasheq((characters . "⥽") (codepoints . (10621)))) ("rfloor" . #hasheq((characters . "⌋") (codepoints . (8971)))) ("rfr" . #hasheq((characters . "𝔯") (codepoints . (120111)))) ("rhar" . #hasheq((characters . "⥤") (codepoints . (10596)))) ("rhard" . #hasheq((characters . "⇁") (codepoints . (8641)))) ("rharu" . #hasheq((characters . "⇀") (codepoints . (8640)))) ("rharul" . #hasheq((characters . "⥬") (codepoints . (10604)))) ("rho" . #hasheq((characters . "ρ") (codepoints . (961)))) ("rhov" . #hasheq((characters . "ϱ") (codepoints . (1009)))) ("rightanglebracket" . #hasheq((characters . "⟩") (codepoints . (10217)))) ("rightarrow" . #hasheq((characters . "→") (codepoints . (8594)))) ("rightarrowbar" . #hasheq((characters . "⇥") (codepoints . (8677)))) ("rightarrowleftarrow" . #hasheq((characters . "⇄") (codepoints . (8644)))) ("rightarrowtail" . #hasheq((characters . "↣") (codepoints . (8611)))) ("rightceiling" . #hasheq((characters . "⌉") (codepoints . (8969)))) ("rightdoublebracket" . #hasheq((characters . "⟧") (codepoints . (10215)))) ("rightdownteevector" . #hasheq((characters . "⥝") (codepoints . (10589)))) ("rightdownvector" . #hasheq((characters . "⇂") (codepoints . (8642)))) ("rightdownvectorbar" . #hasheq((characters . "⥕") (codepoints . (10581)))) ("rightfloor" . #hasheq((characters . "⌋") (codepoints . (8971)))) ("rightharpoondown" . #hasheq((characters . "⇁") (codepoints . (8641)))) ("rightharpoonup" . #hasheq((characters . "⇀") (codepoints . (8640)))) ("rightleftarrows" . #hasheq((characters . "⇄") (codepoints . (8644)))) ("rightleftharpoons" . #hasheq((characters . "⇌") (codepoints . (8652)))) ("rightrightarrows" . #hasheq((characters . "⇉") (codepoints . (8649)))) ("rightsquigarrow" . #hasheq((characters . "↝") (codepoints . (8605)))) ("righttee" . #hasheq((characters . "⊢") (codepoints . (8866)))) ("rightteearrow" . #hasheq((characters . "↦") (codepoints . (8614)))) ("rightteevector" . #hasheq((characters . "⥛") (codepoints . (10587)))) ("rightthreetimes" . #hasheq((characters . "⋌") (codepoints . (8908)))) ("righttriangle" . #hasheq((characters . "⊳") (codepoints . (8883)))) ("righttrianglebar" . #hasheq((characters . "⧐") (codepoints . (10704)))) ("righttriangleequal" . #hasheq((characters . "⊵") (codepoints . (8885)))) ("rightupdownvector" . #hasheq((characters . "⥏") (codepoints . (10575)))) ("rightupteevector" . #hasheq((characters . "⥜") (codepoints . (10588)))) ("rightupvector" . #hasheq((characters . "↾") (codepoints . (8638)))) ("rightupvectorbar" . #hasheq((characters . "⥔") (codepoints . (10580)))) ("rightvector" . #hasheq((characters . "⇀") (codepoints . (8640)))) ("rightvectorbar" . #hasheq((characters . "⥓") (codepoints . (10579)))) ("ring" . #hasheq((characters . "˚") (codepoints . (730)))) ("risingdotseq" . #hasheq((characters . "≓") (codepoints . (8787)))) ("rlarr" . #hasheq((characters . "⇄") (codepoints . (8644)))) ("rlhar" . #hasheq((characters . "⇌") (codepoints . (8652)))) ("rlm" . #hasheq((characters . "\u200F") (codepoints . (8207)))) ("rmoust" . #hasheq((characters . "⎱") (codepoints . (9137)))) ("rmoustache" . #hasheq((characters . "⎱") (codepoints . (9137)))) ("rnmid" . #hasheq((characters . "⫮") (codepoints . (10990)))) ("roang" . #hasheq((characters . "⟭") (codepoints . (10221)))) ("roarr" . #hasheq((characters . "⇾") (codepoints . (8702)))) ("robrk" . #hasheq((characters . "⟧") (codepoints . (10215)))) ("ropar" . #hasheq((characters . "⦆") (codepoints . (10630)))) ("ropf" . #hasheq((characters . "ℝ") (codepoints . (8477)))) ("roplus" . #hasheq((characters . "⨮") (codepoints . (10798)))) ("rotimes" . #hasheq((characters . "⨵") (codepoints . (10805)))) ("roundimplies" . #hasheq((characters . "⥰") (codepoints . (10608)))) ("rpar" . #hasheq((characters . ")") (codepoints . (41)))) ("rpargt" . #hasheq((characters . "⦔") (codepoints . (10644)))) ("rppolint" . #hasheq((characters . "⨒") (codepoints . (10770)))) ("rrarr" . #hasheq((characters . "⇉") (codepoints . (8649)))) ("rrightarrow" . #hasheq((characters . "⇛") (codepoints . (8667)))) ("rsaquo" . #hasheq((characters . "›") (codepoints . (8250)))) ("rscr" . #hasheq((characters . "𝓇") (codepoints . (120007)))) ("rsh" . #hasheq((characters . "↱") (codepoints . (8625)))) ("rsqb" . #hasheq((characters . "]") (codepoints . (93)))) ("rsquo" . #hasheq((characters . "’") (codepoints . (8217)))) ("rsquor" . #hasheq((characters . "’") (codepoints . (8217)))) ("rthree" . #hasheq((characters . "⋌") (codepoints . (8908)))) ("rtimes" . #hasheq((characters . "⋊") (codepoints . (8906)))) ("rtri" . #hasheq((characters . "▹") (codepoints . (9657)))) ("rtrie" . #hasheq((characters . "⊵") (codepoints . (8885)))) ("rtrif" . #hasheq((characters . "▸") (codepoints . (9656)))) ("rtriltri" . #hasheq((characters . "⧎") (codepoints . (10702)))) ("ruledelayed" . #hasheq((characters . "⧴") (codepoints . (10740)))) ("ruluhar" . #hasheq((characters . "⥨") (codepoints . (10600)))) ("rx" . #hasheq((characters . "℞") (codepoints . (8478)))) ("sacute" . #hasheq((characters . "ś") (codepoints . (347)))) ("sbquo" . #hasheq((characters . "‚") (codepoints . (8218)))) ("sc" . #hasheq((characters . "⪼") (codepoints . (10940)))) ("scap" . #hasheq((characters . "⪸") (codepoints . (10936)))) ("scaron" . #hasheq((characters . "Š") (codepoints . (352)))) ("sccue" . #hasheq((characters . "≽") (codepoints . (8829)))) ("sce" . #hasheq((characters . "⪰") (codepoints . (10928)))) ("scedil" . #hasheq((characters . "Ş") (codepoints . (350)))) ("scirc" . #hasheq((characters . "Ŝ") (codepoints . (348)))) ("scnap" . #hasheq((characters . "⪺") (codepoints . (10938)))) ("scne" . #hasheq((characters . "⪶") (codepoints . (10934)))) ("scnsim" . #hasheq((characters . "⋩") (codepoints . (8937)))) ("scpolint" . #hasheq((characters . "⨓") (codepoints . (10771)))) ("scsim" . #hasheq((characters . "≿") (codepoints . (8831)))) ("scy" . #hasheq((characters . "С") (codepoints . (1057)))) ("sdot" . #hasheq((characters . "⋅") (codepoints . (8901)))) ("sdotb" . #hasheq((characters . "⊡") (codepoints . (8865)))) ("sdote" . #hasheq((characters . "⩦") (codepoints . (10854)))) ("searhk" . #hasheq((characters . "⤥") (codepoints . (10533)))) ("searr" . #hasheq((characters . "↘") (codepoints . (8600)))) ("searrow" . #hasheq((characters . "↘") (codepoints . (8600)))) ("sect" . #hasheq((characters . "§") (codepoints . (167)))) ("semi" . #hasheq((characters . ";") (codepoints . (59)))) ("seswar" . #hasheq((characters . "⤩") (codepoints . (10537)))) ("setminus" . #hasheq((characters . "∖") (codepoints . (8726)))) ("setmn" . #hasheq((characters . "∖") (codepoints . (8726)))) ("sext" . #hasheq((characters . "✶") (codepoints . (10038)))) ("sfr" . #hasheq((characters . "𝔰") (codepoints . (120112)))) ("sfrown" . #hasheq((characters . "⌢") (codepoints . (8994)))) ("sharp" . #hasheq((characters . "♯") (codepoints . (9839)))) ("shchcy" . #hasheq((characters . "щ") (codepoints . (1097)))) ("shcy" . #hasheq((characters . "ш") (codepoints . (1096)))) ("shortdownarrow" . #hasheq((characters . "↓") (codepoints . (8595)))) ("shortleftarrow" . #hasheq((characters . "←") (codepoints . (8592)))) ("shortmid" . #hasheq((characters . "∣") (codepoints . (8739)))) ("shortparallel" . #hasheq((characters . "∥") (codepoints . (8741)))) ("shortrightarrow" . #hasheq((characters . "→") (codepoints . (8594)))) ("shortuparrow" . #hasheq((characters . "↑") (codepoints . (8593)))) ("shy" . #hasheq((characters . "\u00AD") (codepoints . (173)))) ("sigma" . #hasheq((characters . "Σ") (codepoints . (931)))) ("sigmaf" . #hasheq((characters . "ς") (codepoints . (962)))) ("sigmav" . #hasheq((characters . "ς") (codepoints . (962)))) ("sim" . #hasheq((characters . "∼") (codepoints . (8764)))) ("simdot" . #hasheq((characters . "⩪") (codepoints . (10858)))) ("sime" . #hasheq((characters . "≃") (codepoints . (8771)))) ("simeq" . #hasheq((characters . "≃") (codepoints . (8771)))) ("simg" . #hasheq((characters . "⪞") (codepoints . (10910)))) ("simge" . #hasheq((characters . "⪠") (codepoints . (10912)))) ("siml" . #hasheq((characters . "⪝") (codepoints . (10909)))) ("simle" . #hasheq((characters . "⪟") (codepoints . (10911)))) ("simne" . #hasheq((characters . "≆") (codepoints . (8774)))) ("simplus" . #hasheq((characters . "⨤") (codepoints . (10788)))) ("simrarr" . #hasheq((characters . "⥲") (codepoints . (10610)))) ("slarr" . #hasheq((characters . "←") (codepoints . (8592)))) ("smallcircle" . #hasheq((characters . "∘") (codepoints . (8728)))) ("smallsetminus" . #hasheq((characters . "∖") (codepoints . (8726)))) ("smashp" . #hasheq((characters . "⨳") (codepoints . (10803)))) ("smeparsl" . #hasheq((characters . "⧤") (codepoints . (10724)))) ("smid" . #hasheq((characters . "∣") (codepoints . (8739)))) ("smile" . #hasheq((characters . "⌣") (codepoints . (8995)))) ("smt" . #hasheq((characters . "⪪") (codepoints . (10922)))) ("smte" . #hasheq((characters . "⪬") (codepoints . (10924)))) ("smtes" . #hasheq((characters . "⪬︀") (codepoints . (10924 65024)))) ("softcy" . #hasheq((characters . "ь") (codepoints . (1100)))) ("sol" . #hasheq((characters . "/") (codepoints . (47)))) ("solb" . #hasheq((characters . "⧄") (codepoints . (10692)))) ("solbar" . #hasheq((characters . "⌿") (codepoints . (9023)))) ("sopf" . #hasheq((characters . "𝕤") (codepoints . (120164)))) ("spades" . #hasheq((characters . "♠") (codepoints . (9824)))) ("spadesuit" . #hasheq((characters . "♠") (codepoints . (9824)))) ("spar" . #hasheq((characters . "∥") (codepoints . (8741)))) ("sqcap" . #hasheq((characters . "⊓") (codepoints . (8851)))) ("sqcaps" . #hasheq((characters . "⊓︀") (codepoints . (8851 65024)))) ("sqcup" . #hasheq((characters . "⊔") (codepoints . (8852)))) ("sqcups" . #hasheq((characters . "⊔︀") (codepoints . (8852 65024)))) ("sqrt" . #hasheq((characters . "√") (codepoints . (8730)))) ("sqsub" . #hasheq((characters . "⊏") (codepoints . (8847)))) ("sqsube" . #hasheq((characters . "⊑") (codepoints . (8849)))) ("sqsubset" . #hasheq((characters . "⊏") (codepoints . (8847)))) ("sqsubseteq" . #hasheq((characters . "⊑") (codepoints . (8849)))) ("sqsup" . #hasheq((characters . "⊐") (codepoints . (8848)))) ("sqsupe" . #hasheq((characters . "⊒") (codepoints . (8850)))) ("sqsupset" . #hasheq((characters . "⊐") (codepoints . (8848)))) ("sqsupseteq" . #hasheq((characters . "⊒") (codepoints . (8850)))) ("squ" . #hasheq((characters . "□") (codepoints . (9633)))) ("square" . #hasheq((characters . "□") (codepoints . (9633)))) ("squareintersection" . #hasheq((characters . "⊓") (codepoints . (8851)))) ("squaresubset" . #hasheq((characters . "⊏") (codepoints . (8847)))) ("squaresubsetequal" . #hasheq((characters . "⊑") (codepoints . (8849)))) ("squaresuperset" . #hasheq((characters . "⊐") (codepoints . (8848)))) ("squaresupersetequal" . #hasheq((characters . "⊒") (codepoints . (8850)))) ("squareunion" . #hasheq((characters . "⊔") (codepoints . (8852)))) ("squarf" . #hasheq((characters . "▪") (codepoints . (9642)))) ("squf" . #hasheq((characters . "▪") (codepoints . (9642)))) ("srarr" . #hasheq((characters . "→") (codepoints . (8594)))) ("sscr" . #hasheq((characters . "𝒮") (codepoints . (119982)))) ("ssetmn" . #hasheq((characters . "∖") (codepoints . (8726)))) ("ssmile" . #hasheq((characters . "⌣") (codepoints . (8995)))) ("sstarf" . #hasheq((characters . "⋆") (codepoints . (8902)))) ("star" . #hasheq((characters . "⋆") (codepoints . (8902)))) ("starf" . #hasheq((characters . "★") (codepoints . (9733)))) ("straightepsilon" . #hasheq((characters . "ϵ") (codepoints . (1013)))) ("straightphi" . #hasheq((characters . "ϕ") (codepoints . (981)))) ("strns" . #hasheq((characters . "¯") (codepoints . (175)))) ("sub" . #hasheq((characters . "⊂") (codepoints . (8834)))) ("subdot" . #hasheq((characters . "⪽") (codepoints . (10941)))) ("sube" . #hasheq((characters . "⫅") (codepoints . (10949)))) ("subedot" . #hasheq((characters . "⫃") (codepoints . (10947)))) ("submult" . #hasheq((characters . "⫁") (codepoints . (10945)))) ("subne" . #hasheq((characters . "⊊") (codepoints . (8842)))) ("subplus" . #hasheq((characters . "⪿") (codepoints . (10943)))) ("subrarr" . #hasheq((characters . "⥹") (codepoints . (10617)))) ("subset" . #hasheq((characters . "⋐") (codepoints . (8912)))) ("subseteq" . #hasheq((characters . "⊆") (codepoints . (8838)))) ("subseteqq" . #hasheq((characters . "⫅") (codepoints . (10949)))) ("subsetequal" . #hasheq((characters . "⊆") (codepoints . (8838)))) ("subsetneq" . #hasheq((characters . "⊊") (codepoints . (8842)))) ("subsetneqq" . #hasheq((characters . "⫋") (codepoints . (10955)))) ("subsim" . #hasheq((characters . "⫇") (codepoints . (10951)))) ("subsub" . #hasheq((characters . "⫕") (codepoints . (10965)))) ("subsup" . #hasheq((characters . "⫓") (codepoints . (10963)))) ("succ" . #hasheq((characters . "≻") (codepoints . (8827)))) ("succapprox" . #hasheq((characters . "⪸") (codepoints . (10936)))) ("succcurlyeq" . #hasheq((characters . "≽") (codepoints . (8829)))) ("succeeds" . #hasheq((characters . "≻") (codepoints . (8827)))) ("succeedsequal" . #hasheq((characters . "⪰") (codepoints . (10928)))) ("succeedsslantequal" . #hasheq((characters . "≽") (codepoints . (8829)))) ("succeedstilde" . #hasheq((characters . "≿") (codepoints . (8831)))) ("succeq" . #hasheq((characters . "⪰") (codepoints . (10928)))) ("succnapprox" . #hasheq((characters . "⪺") (codepoints . (10938)))) ("succneqq" . #hasheq((characters . "⪶") (codepoints . (10934)))) ("succnsim" . #hasheq((characters . "⋩") (codepoints . (8937)))) ("succsim" . #hasheq((characters . "≿") (codepoints . (8831)))) ("suchthat" . #hasheq((characters . "∋") (codepoints . (8715)))) ("sum" . #hasheq((characters . "∑") (codepoints . (8721)))) ("sung" . #hasheq((characters . "♪") (codepoints . (9834)))) ("sup" . #hasheq((characters . "⋑") (codepoints . (8913)))) ("sup1" . #hasheq((characters . "¹") (codepoints . (185)))) ("sup2" . #hasheq((characters . "²") (codepoints . (178)))) ("sup3" . #hasheq((characters . "³") (codepoints . (179)))) ("supdot" . #hasheq((characters . "⪾") (codepoints . (10942)))) ("supdsub" . #hasheq((characters . "⫘") (codepoints . (10968)))) ("supe" . #hasheq((characters . "⊇") (codepoints . (8839)))) ("supedot" . #hasheq((characters . "⫄") (codepoints . (10948)))) ("superset" . #hasheq((characters . "⊃") (codepoints . (8835)))) ("supersetequal" . #hasheq((characters . "⊇") (codepoints . (8839)))) ("suphsol" . #hasheq((characters . "⟉") (codepoints . (10185)))) ("suphsub" . #hasheq((characters . "⫗") (codepoints . (10967)))) ("suplarr" . #hasheq((characters . "⥻") (codepoints . (10619)))) ("supmult" . #hasheq((characters . "⫂") (codepoints . (10946)))) ("supne" . #hasheq((characters . "⫌") (codepoints . (10956)))) ("supplus" . #hasheq((characters . "⫀") (codepoints . (10944)))) ("supset" . #hasheq((characters . "⋑") (codepoints . (8913)))) ("supseteq" . #hasheq((characters . "⊇") (codepoints . (8839)))) ("supseteqq" . #hasheq((characters . "⫆") (codepoints . (10950)))) ("supsetneq" . #hasheq((characters . "⊋") (codepoints . (8843)))) ("supsetneqq" . #hasheq((characters . "⫌") (codepoints . (10956)))) ("supsim" . #hasheq((characters . "⫈") (codepoints . (10952)))) ("supsub" . #hasheq((characters . "⫔") (codepoints . (10964)))) ("supsup" . #hasheq((characters . "⫖") (codepoints . (10966)))) ("swarhk" . #hasheq((characters . "⤦") (codepoints . (10534)))) ("swarr" . #hasheq((characters . "⇙") (codepoints . (8665)))) ("swarrow" . #hasheq((characters . "↙") (codepoints . (8601)))) ("swnwar" . #hasheq((characters . "⤪") (codepoints . (10538)))) ("szlig" . #hasheq((characters . "ß") (codepoints . (223)))) ("tab" . #hasheq((characters . "\t") (codepoints . (9)))) ("target" . #hasheq((characters . "⌖") (codepoints . (8982)))) ("tau" . #hasheq((characters . "Τ") (codepoints . (932)))) ("tbrk" . #hasheq((characters . "⎴") (codepoints . (9140)))) ("tcaron" . #hasheq((characters . "Ť") (codepoints . (356)))) ("tcedil" . #hasheq((characters . "ţ") (codepoints . (355)))) ("tcy" . #hasheq((characters . "т") (codepoints . (1090)))) ("tdot" . #hasheq((characters . "⃛") (codepoints . (8411)))) ("telrec" . #hasheq((characters . "⌕") (codepoints . (8981)))) ("tfr" . #hasheq((characters . "𝔗") (codepoints . (120087)))) ("there4" . #hasheq((characters . "∴") (codepoints . (8756)))) ("therefore" . #hasheq((characters . "∴") (codepoints . (8756)))) ("theta" . #hasheq((characters . "Θ") (codepoints . (920)))) ("thetasym" . #hasheq((characters . "ϑ") (codepoints . (977)))) ("thetav" . #hasheq((characters . "ϑ") (codepoints . (977)))) ("thickapprox" . #hasheq((characters . "≈") (codepoints . (8776)))) ("thicksim" . #hasheq((characters . "∼") (codepoints . (8764)))) ("thickspace" . #hasheq((characters . "  ") (codepoints . (8287 8202)))) ("thinsp" . #hasheq((characters . " ") (codepoints . (8201)))) ("thinspace" . #hasheq((characters . " ") (codepoints . (8201)))) ("thkap" . #hasheq((characters . "≈") (codepoints . (8776)))) ("thksim" . #hasheq((characters . "∼") (codepoints . (8764)))) ("thorn" . #hasheq((characters . "Þ") (codepoints . (222)))) ("tilde" . #hasheq((characters . "˜") (codepoints . (732)))) ("tildeequal" . #hasheq((characters . "≃") (codepoints . (8771)))) ("tildefullequal" . #hasheq((characters . "≅") (codepoints . (8773)))) ("tildetilde" . #hasheq((characters . "≈") (codepoints . (8776)))) ("times" . #hasheq((characters . "×") (codepoints . (215)))) ("timesb" . #hasheq((characters . "⊠") (codepoints . (8864)))) ("timesbar" . #hasheq((characters . "⨱") (codepoints . (10801)))) ("timesd" . #hasheq((characters . "⨰") (codepoints . (10800)))) ("tint" . #hasheq((characters . "∭") (codepoints . (8749)))) ("toea" . #hasheq((characters . "⤨") (codepoints . (10536)))) ("top" . #hasheq((characters . "⊤") (codepoints . (8868)))) ("topbot" . #hasheq((characters . "⌶") (codepoints . (9014)))) ("topcir" . #hasheq((characters . "⫱") (codepoints . (10993)))) ("topf" . #hasheq((characters . "𝕋") (codepoints . (120139)))) ("topfork" . #hasheq((characters . "⫚") (codepoints . (10970)))) ("tosa" . #hasheq((characters . "⤩") (codepoints . (10537)))) ("tprime" . #hasheq((characters . "‴") (codepoints . (8244)))) ("trade" . #hasheq((characters . "™") (codepoints . (8482)))) ("triangle" . #hasheq((characters . "▵") (codepoints . (9653)))) ("triangledown" . #hasheq((characters . "▿") (codepoints . (9663)))) ("triangleleft" . #hasheq((characters . "◃") (codepoints . (9667)))) ("trianglelefteq" . #hasheq((characters . "⊴") (codepoints . (8884)))) ("triangleq" . #hasheq((characters . "≜") (codepoints . (8796)))) ("triangleright" . #hasheq((characters . "▹") (codepoints . (9657)))) ("trianglerighteq" . #hasheq((characters . "⊵") (codepoints . (8885)))) ("tridot" . #hasheq((characters . "◬") (codepoints . (9708)))) ("trie" . #hasheq((characters . "≜") (codepoints . (8796)))) ("triminus" . #hasheq((characters . "⨺") (codepoints . (10810)))) ("tripledot" . #hasheq((characters . "⃛") (codepoints . (8411)))) ("triplus" . #hasheq((characters . "⨹") (codepoints . (10809)))) ("trisb" . #hasheq((characters . "⧍") (codepoints . (10701)))) ("tritime" . #hasheq((characters . "⨻") (codepoints . (10811)))) ("trpezium" . #hasheq((characters . "⏢") (codepoints . (9186)))) ("tscr" . #hasheq((characters . "𝒯") (codepoints . (119983)))) ("tscy" . #hasheq((characters . "ц") (codepoints . (1094)))) ("tshcy" . #hasheq((characters . "Ћ") (codepoints . (1035)))) ("tstrok" . #hasheq((characters . "Ŧ") (codepoints . (358)))) ("twixt" . #hasheq((characters . "≬") (codepoints . (8812)))) ("twoheadleftarrow" . #hasheq((characters . "↞") (codepoints . (8606)))) ("twoheadrightarrow" . #hasheq((characters . "↠") (codepoints . (8608)))) ("uacute" . #hasheq((characters . "Ú") (codepoints . (218)))) ("uarr" . #hasheq((characters . "↟") (codepoints . (8607)))) ("uarrocir" . #hasheq((characters . "⥉") (codepoints . (10569)))) ("ubrcy" . #hasheq((characters . "Ў") (codepoints . (1038)))) ("ubreve" . #hasheq((characters . "ŭ") (codepoints . (365)))) ("ucirc" . #hasheq((characters . "Û") (codepoints . (219)))) ("ucy" . #hasheq((characters . "у") (codepoints . (1091)))) ("udarr" . #hasheq((characters . "⇅") (codepoints . (8645)))) ("udblac" . #hasheq((characters . "ű") (codepoints . (369)))) ("udhar" . #hasheq((characters . "⥮") (codepoints . (10606)))) ("ufisht" . #hasheq((characters . "⥾") (codepoints . (10622)))) ("ufr" . #hasheq((characters . "𝔘") (codepoints . (120088)))) ("ugrave" . #hasheq((characters . "ù") (codepoints . (249)))) ("uhar" . #hasheq((characters . "⥣") (codepoints . (10595)))) ("uharl" . #hasheq((characters . "↿") (codepoints . (8639)))) ("uharr" . #hasheq((characters . "↾") (codepoints . (8638)))) ("uhblk" . #hasheq((characters . "▀") (codepoints . (9600)))) ("ulcorn" . #hasheq((characters . "⌜") (codepoints . (8988)))) ("ulcorner" . #hasheq((characters . "⌜") (codepoints . (8988)))) ("ulcrop" . #hasheq((characters . "⌏") (codepoints . (8975)))) ("ultri" . #hasheq((characters . "◸") (codepoints . (9720)))) ("umacr" . #hasheq((characters . "ū") (codepoints . (363)))) ("uml" . #hasheq((characters . "¨") (codepoints . (168)))) ("underbar" . #hasheq((characters . "_") (codepoints . (95)))) ("underbrace" . #hasheq((characters . "⏟") (codepoints . (9183)))) ("underbracket" . #hasheq((characters . "⎵") (codepoints . (9141)))) ("underparenthesis" . #hasheq((characters . "⏝") (codepoints . (9181)))) ("union" . #hasheq((characters . "⋃") (codepoints . (8899)))) ("unionplus" . #hasheq((characters . "⊎") (codepoints . (8846)))) ("uogon" . #hasheq((characters . "Ų") (codepoints . (370)))) ("uopf" . #hasheq((characters . "𝕌") (codepoints . (120140)))) ("uparrow" . #hasheq((characters . "↑") (codepoints . (8593)))) ("uparrowbar" . #hasheq((characters . "⤒") (codepoints . (10514)))) ("uparrowdownarrow" . #hasheq((characters . "⇅") (codepoints . (8645)))) ("updownarrow" . #hasheq((characters . "↕") (codepoints . (8597)))) ("upequilibrium" . #hasheq((characters . "⥮") (codepoints . (10606)))) ("upharpoonleft" . #hasheq((characters . "↿") (codepoints . (8639)))) ("upharpoonright" . #hasheq((characters . "↾") (codepoints . (8638)))) ("uplus" . #hasheq((characters . "⊎") (codepoints . (8846)))) ("upperleftarrow" . #hasheq((characters . "↖") (codepoints . (8598)))) ("upperrightarrow" . #hasheq((characters . "↗") (codepoints . (8599)))) ("upsi" . #hasheq((characters . "υ") (codepoints . (965)))) ("upsih" . #hasheq((characters . "ϒ") (codepoints . (978)))) ("upsilon" . #hasheq((characters . "Υ") (codepoints . (933)))) ("uptee" . #hasheq((characters . "⊥") (codepoints . (8869)))) ("upteearrow" . #hasheq((characters . "↥") (codepoints . (8613)))) ("upuparrows" . #hasheq((characters . "⇈") (codepoints . (8648)))) ("urcorn" . #hasheq((characters . "⌝") (codepoints . (8989)))) ("urcorner" . #hasheq((characters . "⌝") (codepoints . (8989)))) ("urcrop" . #hasheq((characters . "⌎") (codepoints . (8974)))) ("uring" . #hasheq((characters . "Ů") (codepoints . (366)))) ("urtri" . #hasheq((characters . "◹") (codepoints . (9721)))) ("uscr" . #hasheq((characters . "𝓊") (codepoints . (120010)))) ("utdot" . #hasheq((characters . "⋰") (codepoints . (8944)))) ("utilde" . #hasheq((characters . "Ũ") (codepoints . (360)))) ("utri" . #hasheq((characters . "▵") (codepoints . (9653)))) ("utrif" . #hasheq((characters . "▴") (codepoints . (9652)))) ("uuarr" . #hasheq((characters . "⇈") (codepoints . (8648)))) ("uuml" . #hasheq((characters . "Ü") (codepoints . (220)))) ("uwangle" . #hasheq((characters . "⦧") (codepoints . (10663)))) ("vangrt" . #hasheq((characters . "⦜") (codepoints . (10652)))) ("varepsilon" . #hasheq((characters . "ϵ") (codepoints . (1013)))) ("varkappa" . #hasheq((characters . "ϰ") (codepoints . (1008)))) ("varnothing" . #hasheq((characters . "∅") (codepoints . (8709)))) ("varphi" . #hasheq((characters . "ϕ") (codepoints . (981)))) ("varpi" . #hasheq((characters . "ϖ") (codepoints . (982)))) ("varpropto" . #hasheq((characters . "∝") (codepoints . (8733)))) ("varr" . #hasheq((characters . "↕") (codepoints . (8597)))) ("varrho" . #hasheq((characters . "ϱ") (codepoints . (1009)))) ("varsigma" . #hasheq((characters . "ς") (codepoints . (962)))) ("varsubsetneq" . #hasheq((characters . "⊊︀") (codepoints . (8842 65024)))) ("varsubsetneqq" . #hasheq((characters . "⫋︀") (codepoints . (10955 65024)))) ("varsupsetneq" . #hasheq((characters . "⊋︀") (codepoints . (8843 65024)))) ("varsupsetneqq" . #hasheq((characters . "⫌︀") (codepoints . (10956 65024)))) ("vartheta" . #hasheq((characters . "ϑ") (codepoints . (977)))) ("vartriangleleft" . #hasheq((characters . "⊲") (codepoints . (8882)))) ("vartriangleright" . #hasheq((characters . "⊳") (codepoints . (8883)))) ("vbar" . #hasheq((characters . "⫨") (codepoints . (10984)))) ("vbarv" . #hasheq((characters . "⫩") (codepoints . (10985)))) ("vcy" . #hasheq((characters . "в") (codepoints . (1074)))) ("vdash" . #hasheq((characters . "⊢") (codepoints . (8866)))) ("vdashl" . #hasheq((characters . "⫦") (codepoints . (10982)))) ("vee" . #hasheq((characters . "∨") (codepoints . (8744)))) ("veebar" . #hasheq((characters . "⊻") (codepoints . (8891)))) ("veeeq" . #hasheq((characters . "≚") (codepoints . (8794)))) ("vellip" . #hasheq((characters . "⋮") (codepoints . (8942)))) ("verbar" . #hasheq((characters . "|") (codepoints . (124)))) ("vert" . #hasheq((characters . "|") (codepoints . (124)))) ("verticalbar" . #hasheq((characters . "∣") (codepoints . (8739)))) ("verticalline" . #hasheq((characters . "|") (codepoints . (124)))) ("verticalseparator" . #hasheq((characters . "❘") (codepoints . (10072)))) ("verticaltilde" . #hasheq((characters . "≀") (codepoints . (8768)))) ("verythinspace" . #hasheq((characters . " ") (codepoints . (8202)))) ("vfr" . #hasheq((characters . "𝔳") (codepoints . (120115)))) ("vltri" . #hasheq((characters . "⊲") (codepoints . (8882)))) ("vnsub" . #hasheq((characters . "⊂⃒") (codepoints . (8834 8402)))) ("vnsup" . #hasheq((characters . "⊃⃒") (codepoints . (8835 8402)))) ("vopf" . #hasheq((characters . "𝕍") (codepoints . (120141)))) ("vprop" . #hasheq((characters . "∝") (codepoints . (8733)))) ("vrtri" . #hasheq((characters . "⊳") (codepoints . (8883)))) ("vscr" . #hasheq((characters . "𝓋") (codepoints . (120011)))) ("vsubne" . #hasheq((characters . "⫋︀") (codepoints . (10955 65024)))) ("vsupne" . #hasheq((characters . "⊋︀") (codepoints . (8843 65024)))) ("vvdash" . #hasheq((characters . "⊪") (codepoints . (8874)))) ("vzigzag" . #hasheq((characters . "⦚") (codepoints . (10650)))) ("wcirc" . #hasheq((characters . "ŵ") (codepoints . (373)))) ("wedbar" . #hasheq((characters . "⩟") (codepoints . (10847)))) ("wedge" . #hasheq((characters . "∧") (codepoints . (8743)))) ("wedgeq" . #hasheq((characters . "≙") (codepoints . (8793)))) ("weierp" . #hasheq((characters . "℘") (codepoints . (8472)))) ("wfr" . #hasheq((characters . "𝔚") (codepoints . (120090)))) ("wopf" . #hasheq((characters . "𝕎") (codepoints . (120142)))) ("wp" . #hasheq((characters . "℘") (codepoints . (8472)))) ("wr" . #hasheq((characters . "≀") (codepoints . (8768)))) ("wreath" . #hasheq((characters . "≀") (codepoints . (8768)))) ("wscr" . #hasheq((characters . "𝓌") (codepoints . (120012)))) ("xcap" . #hasheq((characters . "⋂") (codepoints . (8898)))) ("xcirc" . #hasheq((characters . "◯") (codepoints . (9711)))) ("xcup" . #hasheq((characters . "⋃") (codepoints . (8899)))) ("xdtri" . #hasheq((characters . "▽") (codepoints . (9661)))) ("xfr" . #hasheq((characters . "𝔛") (codepoints . (120091)))) ("xharr" . #hasheq((characters . "⟷") (codepoints . (10231)))) ("xi" . #hasheq((characters . "Ξ") (codepoints . (926)))) ("xlarr" . #hasheq((characters . "⟸") (codepoints . (10232)))) ("xmap" . #hasheq((characters . "⟼") (codepoints . (10236)))) ("xnis" . #hasheq((characters . "⋻") (codepoints . (8955)))) ("xodot" . #hasheq((characters . "⨀") (codepoints . (10752)))) ("xopf" . #hasheq((characters . "𝕩") (codepoints . (120169)))) ("xoplus" . #hasheq((characters . "⨁") (codepoints . (10753)))) ("xotime" . #hasheq((characters . "⨂") (codepoints . (10754)))) ("xrarr" . #hasheq((characters . "⟶") (codepoints . (10230)))) ("xscr" . #hasheq((characters . "𝓍") (codepoints . (120013)))) ("xsqcup" . #hasheq((characters . "⨆") (codepoints . (10758)))) ("xuplus" . #hasheq((characters . "⨄") (codepoints . (10756)))) ("xutri" . #hasheq((characters . "△") (codepoints . (9651)))) ("xvee" . #hasheq((characters . "⋁") (codepoints . (8897)))) ("xwedge" . #hasheq((characters . "⋀") (codepoints . (8896)))) ("yacute" . #hasheq((characters . "ý") (codepoints . (253)))) ("yacy" . #hasheq((characters . "Я") (codepoints . (1071)))) ("ycirc" . #hasheq((characters . "ŷ") (codepoints . (375)))) ("ycy" . #hasheq((characters . "ы") (codepoints . (1099)))) ("yen" . #hasheq((characters . "¥") (codepoints . (165)))) ("yfr" . #hasheq((characters . "𝔜") (codepoints . (120092)))) ("yicy" . #hasheq((characters . "Ї") (codepoints . (1031)))) ("yopf" . #hasheq((characters . "𝕪") (codepoints . (120170)))) ("yscr" . #hasheq((characters . "𝒴") (codepoints . (119988)))) ("yucy" . #hasheq((characters . "Ю") (codepoints . (1070)))) ("yuml" . #hasheq((characters . "ÿ") (codepoints . (255)))) ("zacute" . #hasheq((characters . "Ź") (codepoints . (377)))) ("zcaron" . #hasheq((characters . "ž") (codepoints . (382)))) ("zcy" . #hasheq((characters . "з") (codepoints . (1079)))) ("zdot" . #hasheq((characters . "Ż") (codepoints . (379)))) ("zeetrf" . #hasheq((characters . "ℨ") (codepoints . (8488)))) ("zerowidthspace" . #hasheq((characters . "\u200B") (codepoints . (8203)))) ("zeta" . #hasheq((characters . "ζ") (codepoints . (950)))) ("zfr" . #hasheq((characters . "ℨ") (codepoints . (8488)))) ("zhcy" . #hasheq((characters . "ж") (codepoints . (1078)))) ("zigrarr" . #hasheq((characters . "⇝") (codepoints . (8669)))) ("zopf" . #hasheq((characters . "ℤ") (codepoints . (8484)))) ("zscr" . #hasheq((characters . "𝓏") (codepoints . (120015)))) ("zwj" . #hasheq((characters . "\u200D") (codepoints . (8205)))) ("zwnj" . #hasheq((characters . "\u200C") (codepoints . (8204)))))